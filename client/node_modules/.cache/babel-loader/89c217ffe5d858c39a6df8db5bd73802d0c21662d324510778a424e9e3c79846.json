{"ast":null,"code":"import { parseSelector } from 'vega-event-selector';\nimport { X, Y } from '../../channel';\nimport { BRUSH as INTERVAL_BRUSH } from './interval';\nimport scalesCompiler, { domain } from './scales';\nconst ANCHOR = '_translate_anchor';\nconst DELTA = '_translate_delta';\nconst translate = {\n  defined: selCmpt => {\n    return selCmpt.type === 'interval' && selCmpt.translate;\n  },\n  signals: (model, selCmpt, signals) => {\n    const name = selCmpt.name;\n    const boundScales = scalesCompiler.defined(selCmpt);\n    const anchor = name + ANCHOR;\n    const {\n      x,\n      y\n    } = selCmpt.project.hasChannel;\n    let events = parseSelector(selCmpt.translate, 'scope');\n    if (!boundScales) {\n      events = events.map(e => (e.between[0].markname = name + INTERVAL_BRUSH, e));\n    }\n    signals.push({\n      name: anchor,\n      value: {},\n      on: [{\n        events: events.map(e => e.between[0]),\n        update: '{x: x(unit), y: y(unit)' + (x !== undefined ? `, extent_x: ${boundScales ? domain(model, X) : `slice(${x.signals.visual})`}` : '') + (y !== undefined ? `, extent_y: ${boundScales ? domain(model, Y) : `slice(${y.signals.visual})`}` : '') + '}'\n      }]\n    }, {\n      name: name + DELTA,\n      value: {},\n      on: [{\n        events,\n        update: `{x: ${anchor}.x - x(unit), y: ${anchor}.y - y(unit)}`\n      }]\n    });\n    if (x !== undefined) {\n      onDelta(model, selCmpt, x, 'width', signals);\n    }\n    if (y !== undefined) {\n      onDelta(model, selCmpt, y, 'height', signals);\n    }\n    return signals;\n  }\n};\nexport default translate;\nfunction onDelta(model, selCmpt, proj, size, signals) {\n  const name = selCmpt.name;\n  const anchor = name + ANCHOR;\n  const delta = name + DELTA;\n  const channel = proj.channel;\n  const boundScales = scalesCompiler.defined(selCmpt);\n  const signal = signals.find(s => s.name === proj.signals[boundScales ? 'data' : 'visual']);\n  const sizeSg = model.getSizeSignalRef(size).signal;\n  const scaleCmpt = model.getScaleComponent(channel);\n  const scaleType = scaleCmpt && scaleCmpt.get('type');\n  const reversed = scaleCmpt && scaleCmpt.get('reverse'); // scale parsing sets this flag for fieldDef.sort\n  const sign = !boundScales ? '' : channel === X ? reversed ? '' : '-' : reversed ? '-' : '';\n  const extent = `${anchor}.extent_${channel}`;\n  const offset = `${sign}${delta}.${channel} / ${boundScales ? `${sizeSg}` : `span(${extent})`}`;\n  const panFn = !boundScales || !scaleCmpt ? 'panLinear' : scaleType === 'log' ? 'panLog' : scaleType === 'symlog' ? 'panSymlog' : scaleType === 'pow' ? 'panPow' : 'panLinear';\n  const arg = !boundScales ? '' : scaleType === 'pow' ? `, ${scaleCmpt.get('exponent') ?? 1}` : scaleType === 'symlog' ? `, ${scaleCmpt.get('constant') ?? 1}` : '';\n  const update = `${panFn}(${extent}, ${offset}${arg})`;\n  signal.on.push({\n    events: {\n      signal: delta\n    },\n    update: boundScales ? update : `clampRange(${update}, 0, ${sizeSg})`\n  });\n}","map":{"version":3,"names":["parseSelector","X","Y","BRUSH","INTERVAL_BRUSH","scalesCompiler","domain","ANCHOR","DELTA","translate","defined","selCmpt","type","signals","model","name","boundScales","anchor","x","y","project","hasChannel","events","map","e","between","markname","push","value","on","update","undefined","visual","onDelta","proj","size","delta","channel","signal","find","s","sizeSg","getSizeSignalRef","scaleCmpt","getScaleComponent","scaleType","get","reversed","sign","extent","offset","panFn","arg"],"sources":["C:\\Users\\sutul\\node_modules\\vega-lite\\src\\compile\\selection\\translate.ts"],"sourcesContent":["import {NewSignal} from 'vega';\nimport {parseSelector} from 'vega-event-selector';\nimport {SelectionComponent} from '.';\nimport {ScaleChannel, X, Y} from '../../channel';\nimport {UnitModel} from '../unit';\nimport {BRUSH as INTERVAL_BRUSH} from './interval';\nimport {SelectionProjection} from './project';\nimport scalesCompiler, {domain} from './scales';\nimport {SelectionCompiler} from '.';\n\nconst ANCHOR = '_translate_anchor';\nconst DELTA = '_translate_delta';\n\nconst translate: SelectionCompiler<'interval'> = {\n  defined: selCmpt => {\n    return selCmpt.type === 'interval' && selCmpt.translate;\n  },\n\n  signals: (model, selCmpt, signals) => {\n    const name = selCmpt.name;\n    const boundScales = scalesCompiler.defined(selCmpt);\n    const anchor = name + ANCHOR;\n    const {x, y} = selCmpt.project.hasChannel;\n    let events = parseSelector(selCmpt.translate, 'scope');\n\n    if (!boundScales) {\n      events = events.map(e => ((e.between[0].markname = name + INTERVAL_BRUSH), e));\n    }\n\n    signals.push(\n      {\n        name: anchor,\n        value: {},\n        on: [\n          {\n            events: events.map(e => e.between[0]),\n            update:\n              '{x: x(unit), y: y(unit)' +\n              (x !== undefined ? `, extent_x: ${boundScales ? domain(model, X) : `slice(${x.signals.visual})`}` : '') +\n              (y !== undefined ? `, extent_y: ${boundScales ? domain(model, Y) : `slice(${y.signals.visual})`}` : '') +\n              '}'\n          }\n        ]\n      },\n      {\n        name: name + DELTA,\n        value: {},\n        on: [\n          {\n            events,\n            update: `{x: ${anchor}.x - x(unit), y: ${anchor}.y - y(unit)}`\n          }\n        ]\n      }\n    );\n\n    if (x !== undefined) {\n      onDelta(model, selCmpt, x, 'width', signals);\n    }\n\n    if (y !== undefined) {\n      onDelta(model, selCmpt, y, 'height', signals);\n    }\n\n    return signals;\n  }\n};\n\nexport default translate;\n\nfunction onDelta(\n  model: UnitModel,\n  selCmpt: SelectionComponent,\n  proj: SelectionProjection,\n  size: 'width' | 'height',\n  signals: NewSignal[]\n) {\n  const name = selCmpt.name;\n  const anchor = name + ANCHOR;\n  const delta = name + DELTA;\n  const channel = proj.channel as ScaleChannel;\n  const boundScales = scalesCompiler.defined(selCmpt);\n  const signal = signals.find(s => s.name === proj.signals[boundScales ? 'data' : 'visual']);\n  const sizeSg = model.getSizeSignalRef(size).signal;\n  const scaleCmpt = model.getScaleComponent(channel);\n  const scaleType = scaleCmpt && scaleCmpt.get('type');\n  const reversed = scaleCmpt && scaleCmpt.get('reverse'); // scale parsing sets this flag for fieldDef.sort\n  const sign = !boundScales ? '' : channel === X ? (reversed ? '' : '-') : reversed ? '-' : '';\n  const extent = `${anchor}.extent_${channel}`;\n  const offset = `${sign}${delta}.${channel} / ${boundScales ? `${sizeSg}` : `span(${extent})`}`;\n  const panFn =\n    !boundScales || !scaleCmpt\n      ? 'panLinear'\n      : scaleType === 'log'\n        ? 'panLog'\n        : scaleType === 'symlog'\n          ? 'panSymlog'\n          : scaleType === 'pow'\n            ? 'panPow'\n            : 'panLinear';\n  const arg = !boundScales\n    ? ''\n    : scaleType === 'pow'\n      ? `, ${scaleCmpt.get('exponent') ?? 1}`\n      : scaleType === 'symlog'\n        ? `, ${scaleCmpt.get('constant') ?? 1}`\n        : '';\n  const update = `${panFn}(${extent}, ${offset}${arg})`;\n\n  signal.on.push({\n    events: {signal: delta},\n    update: boundScales ? update : `clampRange(${update}, 0, ${sizeSg})`\n  });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}