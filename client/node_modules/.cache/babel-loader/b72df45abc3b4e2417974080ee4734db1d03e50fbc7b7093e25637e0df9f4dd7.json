{"ast":null,"code":"import { parseExpression } from 'vega-expression';\nfunction getName(node) {\n  const name = [];\n  if (node.type === 'Identifier') {\n    return [node.name];\n  }\n  if (node.type === 'Literal') {\n    return [node.value];\n  }\n  if (node.type === 'MemberExpression') {\n    name.push(...getName(node.object));\n    name.push(...getName(node.property));\n  }\n  return name;\n}\nfunction startsWithDatum(node) {\n  if (node.object.type === 'MemberExpression') {\n    return startsWithDatum(node.object);\n  }\n  return node.object.name === 'datum';\n}\nexport function getDependentFields(expression) {\n  const ast = parseExpression(expression);\n  const dependents = new Set();\n  // visit is missing in types https://github.com/vega/vega/issues/3298\n  ast.visit(node => {\n    if (node.type === 'MemberExpression' && startsWithDatum(node)) {\n      dependents.add(getName(node).slice(1).join('.'));\n    }\n  });\n  return dependents;\n}","map":{"version":3,"names":["parseExpression","getName","node","name","type","value","push","object","property","startsWithDatum","getDependentFields","expression","ast","dependents","Set","visit","add","slice","join"],"sources":["C:\\Users\\sutul\\node_modules\\vega-lite\\src\\compile\\data\\expressions.ts"],"sourcesContent":["import {parseExpression} from 'vega-expression';\n\nfunction getName(node: any) {\n  const name: string[] = [];\n\n  if (node.type === 'Identifier') {\n    return [node.name];\n  }\n\n  if (node.type === 'Literal') {\n    return [node.value];\n  }\n\n  if (node.type === 'MemberExpression') {\n    name.push(...getName(node.object));\n    name.push(...getName(node.property));\n  }\n\n  return name;\n}\n\nfunction startsWithDatum(node: any): boolean {\n  if (node.object.type === 'MemberExpression') {\n    return startsWithDatum(node.object);\n  }\n  return node.object.name === 'datum';\n}\n\nexport function getDependentFields(expression: string) {\n  const ast = parseExpression(expression);\n  const dependents = new Set<string>();\n  // visit is missing in types https://github.com/vega/vega/issues/3298\n  (ast as any).visit((node: any) => {\n    if (node.type === 'MemberExpression' && startsWithDatum(node)) {\n      dependents.add(getName(node).slice(1).join('.'));\n    }\n  });\n\n  return dependents;\n}\n"],"mappings":"AAAA,SAAQA,eAAe,QAAO,iBAAiB;AAE/C,SAASC,OAAOA,CAACC,IAAS;EACxB,MAAMC,IAAI,GAAa,EAAE;EAEzB,IAAID,IAAI,CAACE,IAAI,KAAK,YAAY,EAAE;IAC9B,OAAO,CAACF,IAAI,CAACC,IAAI,CAAC;EACpB;EAEA,IAAID,IAAI,CAACE,IAAI,KAAK,SAAS,EAAE;IAC3B,OAAO,CAACF,IAAI,CAACG,KAAK,CAAC;EACrB;EAEA,IAAIH,IAAI,CAACE,IAAI,KAAK,kBAAkB,EAAE;IACpCD,IAAI,CAACG,IAAI,CAAC,GAAGL,OAAO,CAACC,IAAI,CAACK,MAAM,CAAC,CAAC;IAClCJ,IAAI,CAACG,IAAI,CAAC,GAAGL,OAAO,CAACC,IAAI,CAACM,QAAQ,CAAC,CAAC;EACtC;EAEA,OAAOL,IAAI;AACb;AAEA,SAASM,eAAeA,CAACP,IAAS;EAChC,IAAIA,IAAI,CAACK,MAAM,CAACH,IAAI,KAAK,kBAAkB,EAAE;IAC3C,OAAOK,eAAe,CAACP,IAAI,CAACK,MAAM,CAAC;EACrC;EACA,OAAOL,IAAI,CAACK,MAAM,CAACJ,IAAI,KAAK,OAAO;AACrC;AAEA,OAAM,SAAUO,kBAAkBA,CAACC,UAAkB;EACnD,MAAMC,GAAG,GAAGZ,eAAe,CAACW,UAAU,CAAC;EACvC,MAAME,UAAU,GAAG,IAAIC,GAAG,EAAU;EACpC;EACCF,GAAW,CAACG,KAAK,CAAEb,IAAS,IAAI;IAC/B,IAAIA,IAAI,CAACE,IAAI,KAAK,kBAAkB,IAAIK,eAAe,CAACP,IAAI,CAAC,EAAE;MAC7DW,UAAU,CAACG,GAAG,CAACf,OAAO,CAACC,IAAI,CAAC,CAACe,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;IAClD;EACF,CAAC,CAAC;EAEF,OAAOL,UAAU;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}