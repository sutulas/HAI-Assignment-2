{"ast":null,"code":"import * as log from '../../log';\nimport { isPathMark } from '../../mark';\nimport { tooltip } from '../mark/encode';\nconst VORONOI = 'voronoi';\nconst nearest = {\n  defined: selCmpt => {\n    return selCmpt.type === 'point' && selCmpt.nearest;\n  },\n  parse: (model, selCmpt) => {\n    // Scope selection events to the voronoi mark to prevent capturing\n    // events that occur on the group mark (https://github.com/vega/vega/issues/2112).\n    if (selCmpt.events) {\n      for (const s of selCmpt.events) {\n        s.markname = model.getName(VORONOI);\n      }\n    }\n  },\n  marks: (model, selCmpt, marks) => {\n    const {\n      x,\n      y\n    } = selCmpt.project.hasChannel;\n    const markType = model.mark;\n    if (isPathMark(markType)) {\n      log.warn(log.message.nearestNotSupportForContinuous(markType));\n      return marks;\n    }\n    const cellDef = {\n      name: model.getName(VORONOI),\n      type: 'path',\n      interactive: true,\n      from: {\n        data: model.getName('marks')\n      },\n      encode: {\n        update: {\n          fill: {\n            value: 'transparent'\n          },\n          strokeWidth: {\n            value: 0.35\n          },\n          stroke: {\n            value: 'transparent'\n          },\n          isVoronoi: {\n            value: true\n          },\n          ...tooltip(model, {\n            reactiveGeom: true\n          })\n        }\n      },\n      transform: [{\n        type: 'voronoi',\n        x: {\n          expr: x || !y ? 'datum.datum.x || 0' : '0'\n        },\n        y: {\n          expr: y || !x ? 'datum.datum.y || 0' : '0'\n        },\n        size: [model.getSizeSignalRef('width'), model.getSizeSignalRef('height')]\n      }]\n    };\n    let index = 0;\n    let exists = false;\n    marks.forEach((mark, i) => {\n      const name = mark.name ?? '';\n      if (name === model.component.mark[0].name) {\n        index = i;\n      } else if (name.includes(VORONOI)) {\n        exists = true;\n      }\n    });\n    if (!exists) {\n      marks.splice(index + 1, 0, cellDef);\n    }\n    return marks;\n  }\n};\nexport default nearest;","map":{"version":3,"names":["log","isPathMark","tooltip","VORONOI","nearest","defined","selCmpt","type","parse","model","events","s","markname","getName","marks","x","y","project","hasChannel","markType","mark","warn","message","nearestNotSupportForContinuous","cellDef","name","interactive","from","data","encode","update","fill","value","strokeWidth","stroke","isVoronoi","reactiveGeom","transform","expr","size","getSizeSignalRef","index","exists","forEach","i","component","includes","splice"],"sources":["C:\\Users\\sutul\\node_modules\\vega-lite\\src\\compile\\selection\\nearest.ts"],"sourcesContent":["import * as log from '../../log';\nimport {isPathMark} from '../../mark';\nimport {tooltip} from '../mark/encode';\nimport {SelectionCompiler} from '.';\n\nconst VORONOI = 'voronoi';\n\nconst nearest: SelectionCompiler<'point'> = {\n  defined: selCmpt => {\n    return selCmpt.type === 'point' && selCmpt.nearest;\n  },\n\n  parse: (model, selCmpt) => {\n    // Scope selection events to the voronoi mark to prevent capturing\n    // events that occur on the group mark (https://github.com/vega/vega/issues/2112).\n    if (selCmpt.events) {\n      for (const s of selCmpt.events) {\n        s.markname = model.getName(VORONOI);\n      }\n    }\n  },\n\n  marks: (model, selCmpt, marks) => {\n    const {x, y} = selCmpt.project.hasChannel;\n    const markType = model.mark;\n    if (isPathMark(markType)) {\n      log.warn(log.message.nearestNotSupportForContinuous(markType));\n      return marks;\n    }\n\n    const cellDef = {\n      name: model.getName(VORONOI),\n      type: 'path',\n      interactive: true,\n      from: {data: model.getName('marks')},\n      encode: {\n        update: {\n          fill: {value: 'transparent'},\n          strokeWidth: {value: 0.35},\n          stroke: {value: 'transparent'},\n          isVoronoi: {value: true},\n          ...tooltip(model, {reactiveGeom: true})\n        }\n      },\n      transform: [\n        {\n          type: 'voronoi',\n          x: {expr: x || !y ? 'datum.datum.x || 0' : '0'},\n          y: {expr: y || !x ? 'datum.datum.y || 0' : '0'},\n          size: [model.getSizeSignalRef('width'), model.getSizeSignalRef('height')]\n        }\n      ]\n    };\n\n    let index = 0;\n    let exists = false;\n    marks.forEach((mark, i) => {\n      const name = mark.name ?? '';\n      if (name === model.component.mark[0].name) {\n        index = i;\n      } else if (name.includes(VORONOI)) {\n        exists = true;\n      }\n    });\n\n    if (!exists) {\n      marks.splice(index + 1, 0, cellDef);\n    }\n\n    return marks;\n  }\n};\n\nexport default nearest;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}