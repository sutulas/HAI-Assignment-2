{"ast":null,"code":"export const HEADER_CHANNELS = ['row', 'column'];\nexport const HEADER_TYPES = ['header', 'footer'];","map":{"version":3,"names":["HEADER_CHANNELS","HEADER_TYPES"],"sources":["C:\\Users\\sutul\\node_modules\\vega-lite\\src\\compile\\header\\component.ts"],"sourcesContent":["/**\n * Utility for generating row / column headers\n */\nimport {Axis as VgAxis, SignalRef, Text} from 'vega';\nimport {FacetFieldDef} from '../../spec/facet';\n\nexport type HeaderChannel = 'row' | 'column';\nexport const HEADER_CHANNELS: HeaderChannel[] = ['row', 'column'];\n\nexport type HeaderType = 'header' | 'footer';\nexport const HEADER_TYPES: HeaderType[] = ['header', 'footer'];\n\nexport interface LayoutHeaderComponentIndex {\n  row?: LayoutHeaderComponent;\n  column?: LayoutHeaderComponent;\n  facet?: LayoutHeaderComponent;\n}\n\n/**\n * A component that represents all header, footers and title of a Vega group with layout directive.\n */\nexport interface LayoutHeaderComponent {\n  title?: Text | SignalRef;\n\n  // TODO: concat can have multiple header / footer.\n  // Need to redesign this part a bit.\n\n  facetFieldDef?: FacetFieldDef<string, SignalRef>;\n\n  /**\n   * An array of header components for headers.\n   * For facet, there should be only one header component, which is data-driven.\n   * For concat, there can be multiple header components that explicitly list different axes.\n   */\n  header?: HeaderComponent[];\n\n  /**\n   * An array of header components for footers.\n   * For facet, there should be only one header component, which is data-driven.\n   * For concat, there can be multiple header components that explicitly list different axes.\n   */\n  footer?: HeaderComponent[];\n}\n\n/**\n * A component that represents one group of row/column-header/footer.\n */\nexport interface HeaderComponent {\n  labels: boolean;\n\n  sizeSignal: {signal: string};\n\n  axes: VgAxis[];\n}\n"],"mappings":"AAOA,OAAO,MAAMA,eAAe,GAAoB,CAAC,KAAK,EAAE,QAAQ,CAAC;AAGjE,OAAO,MAAMC,YAAY,GAAiB,CAAC,QAAQ,EAAE,QAAQ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}