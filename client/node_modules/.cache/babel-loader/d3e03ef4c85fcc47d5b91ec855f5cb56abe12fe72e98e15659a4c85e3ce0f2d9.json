{"ast":null,"code":"import { isArray } from 'vega-util';\nimport { hasProperty } from '../util';\nexport function isRepeatSpec(spec) {\n  return hasProperty(spec, 'repeat');\n}\nexport function isLayerRepeatSpec(spec) {\n  return !isArray(spec.repeat) && hasProperty(spec.repeat, 'layer');\n}","map":{"version":3,"names":["isArray","hasProperty","isRepeatSpec","spec","isLayerRepeatSpec","repeat"],"sources":["C:\\Users\\sutul\\node_modules\\vega-lite\\src\\spec\\repeat.ts"],"sourcesContent":["import {isArray} from 'vega-util';\nimport {LayerSpec, NonNormalizedSpec} from '.';\nimport {Field} from '../channeldef';\nimport {BaseSpec, GenericCompositionLayoutWithColumns, ResolveMixins} from './base';\nimport {UnitSpecWithFrame} from './unit';\nimport {hasProperty} from '../util';\n\nexport interface RepeatMapping {\n  /**\n   * An array of fields to be repeated vertically.\n   */\n  row?: string[];\n\n  /**\n   * An array of fields to be repeated horizontally.\n   */\n  column?: string[];\n}\n\nexport interface LayerRepeatMapping extends RepeatMapping {\n  /**\n   * An array of fields to be repeated as layers.\n   */\n  layer: string[];\n}\n\nexport type RepeatSpec = NonLayerRepeatSpec | LayerRepeatSpec;\n\n/**\n * Base interface for a repeat specification.\n */\nexport interface NonLayerRepeatSpec extends BaseSpec, GenericCompositionLayoutWithColumns, ResolveMixins {\n  /**\n   * Definition for fields to be repeated. One of:\n   * 1) An array of fields to be repeated. If `\"repeat\"` is an array, the field can be referred to as `{\"repeat\": \"repeat\"}`. The repeated views are laid out in a wrapped row. You can set the number of columns to control the wrapping.\n   * 2) An object that maps `\"row\"` and/or `\"column\"` to the listed fields to be repeated along the particular orientations. The objects `{\"repeat\": \"row\"}` and `{\"repeat\": \"column\"}` can be used to refer to the repeated field respectively.\n   */\n  repeat: string[] | RepeatMapping;\n\n  /**\n   * A specification of the view that gets repeated.\n   */\n  spec: NonNormalizedSpec;\n}\n\nexport interface LayerRepeatSpec extends BaseSpec, GenericCompositionLayoutWithColumns, ResolveMixins {\n  /**\n   * Definition for fields to be repeated. One of:\n   * 1) An array of fields to be repeated. If `\"repeat\"` is an array, the field can be referred to as `{\"repeat\": \"repeat\"}`. The repeated views are laid out in a wrapped row. You can set the number of columns to control the wrapping.\n   * 2) An object that maps `\"row\"` and/or `\"column\"` to the listed fields to be repeated along the particular orientations. The objects `{\"repeat\": \"row\"}` and `{\"repeat\": \"column\"}` can be used to refer to the repeated field respectively.\n   */\n  repeat: LayerRepeatMapping;\n\n  /**\n   * A specification of the view that gets repeated.\n   */\n  spec: LayerSpec<Field> | UnitSpecWithFrame<Field>;\n}\n\nexport function isRepeatSpec(spec: BaseSpec): spec is RepeatSpec {\n  return hasProperty(spec, 'repeat');\n}\n\nexport function isLayerRepeatSpec(spec: RepeatSpec): spec is LayerRepeatSpec {\n  return !isArray(spec.repeat) && hasProperty(spec.repeat, 'layer');\n}\n"],"mappings":"AAAA,SAAQA,OAAO,QAAO,WAAW;AAKjC,SAAQC,WAAW,QAAO,SAAS;AAsDnC,OAAM,SAAUC,YAAYA,CAACC,IAAc;EACzC,OAAOF,WAAW,CAACE,IAAI,EAAE,QAAQ,CAAC;AACpC;AAEA,OAAM,SAAUC,iBAAiBA,CAACD,IAAgB;EAChD,OAAO,CAACH,OAAO,CAACG,IAAI,CAACE,MAAM,CAAC,IAAIJ,WAAW,CAACE,IAAI,CAACE,MAAM,EAAE,OAAO,CAAC;AACnE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}