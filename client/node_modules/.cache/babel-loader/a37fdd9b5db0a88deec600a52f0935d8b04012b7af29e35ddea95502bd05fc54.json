{"ast":null,"code":"import * as encode from './encode';\nexport const rule = {\n  vgMark: 'rule',\n  encodeEntry: model => {\n    const {\n      markDef\n    } = model;\n    const orient = markDef.orient;\n    if (!model.encoding.x && !model.encoding.y && !model.encoding.latitude && !model.encoding.longitude) {\n      // Show nothing if we have none of x, y, lat, and long.\n      return {};\n    }\n    return {\n      ...encode.baseEncodeEntry(model, {\n        align: 'ignore',\n        baseline: 'ignore',\n        color: 'include',\n        orient: 'ignore',\n        size: 'ignore',\n        theta: 'ignore'\n      }),\n      ...encode.pointOrRangePosition('x', model, {\n        defaultPos: orient === 'horizontal' ? 'zeroOrMax' : 'mid',\n        defaultPos2: 'zeroOrMin',\n        range: orient !== 'vertical' // include x2 for horizontal or line segment rule\n      }),\n      ...encode.pointOrRangePosition('y', model, {\n        defaultPos: orient === 'vertical' ? 'zeroOrMax' : 'mid',\n        defaultPos2: 'zeroOrMin',\n        range: orient !== 'horizontal' // include y2 for vertical or line segment rule\n      }),\n      ...encode.nonPosition('size', model, {\n        vgChannel: 'strokeWidth' // VL's rule size is strokeWidth\n      })\n    };\n  }\n};","map":{"version":3,"names":["encode","rule","vgMark","encodeEntry","model","markDef","orient","encoding","x","y","latitude","longitude","baseEncodeEntry","align","baseline","color","size","theta","pointOrRangePosition","defaultPos","defaultPos2","range","nonPosition","vgChannel"],"sources":["C:\\Users\\sutul\\node_modules\\vega-lite\\src\\compile\\mark\\rule.ts"],"sourcesContent":["import {UnitModel} from '../unit';\nimport {MarkCompiler} from './base';\nimport * as encode from './encode';\n\nexport const rule: MarkCompiler = {\n  vgMark: 'rule',\n  encodeEntry: (model: UnitModel) => {\n    const {markDef} = model;\n    const orient = markDef.orient;\n\n    if (!model.encoding.x && !model.encoding.y && !model.encoding.latitude && !model.encoding.longitude) {\n      // Show nothing if we have none of x, y, lat, and long.\n      return {};\n    }\n\n    return {\n      ...encode.baseEncodeEntry(model, {\n        align: 'ignore',\n        baseline: 'ignore',\n        color: 'include',\n        orient: 'ignore',\n        size: 'ignore',\n        theta: 'ignore'\n      }),\n      ...encode.pointOrRangePosition('x', model, {\n        defaultPos: orient === 'horizontal' ? 'zeroOrMax' : 'mid',\n        defaultPos2: 'zeroOrMin',\n        range: orient !== 'vertical' // include x2 for horizontal or line segment rule\n      }),\n      ...encode.pointOrRangePosition('y', model, {\n        defaultPos: orient === 'vertical' ? 'zeroOrMax' : 'mid',\n        defaultPos2: 'zeroOrMin',\n        range: orient !== 'horizontal' // include y2 for vertical or line segment rule\n      }),\n      ...encode.nonPosition('size', model, {\n        vgChannel: 'strokeWidth' // VL's rule size is strokeWidth\n      })\n    };\n  }\n};\n"],"mappings":"AAEA,OAAO,KAAKA,MAAM,MAAM,UAAU;AAElC,OAAO,MAAMC,IAAI,GAAiB;EAChCC,MAAM,EAAE,MAAM;EACdC,WAAW,EAAGC,KAAgB,IAAI;IAChC,MAAM;MAACC;IAAO,CAAC,GAAGD,KAAK;IACvB,MAAME,MAAM,GAAGD,OAAO,CAACC,MAAM;IAE7B,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,CAAC,IAAI,CAACJ,KAAK,CAACG,QAAQ,CAACE,CAAC,IAAI,CAACL,KAAK,CAACG,QAAQ,CAACG,QAAQ,IAAI,CAACN,KAAK,CAACG,QAAQ,CAACI,SAAS,EAAE;MACnG;MACA,OAAO,EAAE;IACX;IAEA,OAAO;MACL,GAAGX,MAAM,CAACY,eAAe,CAACR,KAAK,EAAE;QAC/BS,KAAK,EAAE,QAAQ;QACfC,QAAQ,EAAE,QAAQ;QAClBC,KAAK,EAAE,SAAS;QAChBT,MAAM,EAAE,QAAQ;QAChBU,IAAI,EAAE,QAAQ;QACdC,KAAK,EAAE;OACR,CAAC;MACF,GAAGjB,MAAM,CAACkB,oBAAoB,CAAC,GAAG,EAAEd,KAAK,EAAE;QACzCe,UAAU,EAAEb,MAAM,KAAK,YAAY,GAAG,WAAW,GAAG,KAAK;QACzDc,WAAW,EAAE,WAAW;QACxBC,KAAK,EAAEf,MAAM,KAAK,UAAU,CAAC;OAC9B,CAAC;MACF,GAAGN,MAAM,CAACkB,oBAAoB,CAAC,GAAG,EAAEd,KAAK,EAAE;QACzCe,UAAU,EAAEb,MAAM,KAAK,UAAU,GAAG,WAAW,GAAG,KAAK;QACvDc,WAAW,EAAE,WAAW;QACxBC,KAAK,EAAEf,MAAM,KAAK,YAAY,CAAC;OAChC,CAAC;MACF,GAAGN,MAAM,CAACsB,WAAW,CAAC,MAAM,EAAElB,KAAK,EAAE;QACnCmB,SAAS,EAAE,aAAa,CAAC;OAC1B;KACF;EACH;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}