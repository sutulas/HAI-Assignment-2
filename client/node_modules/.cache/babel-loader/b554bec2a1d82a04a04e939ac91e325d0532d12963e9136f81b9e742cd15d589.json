{"ast":null,"code":"import { tickStep } from 'd3-array';\nimport { formatLocale, formatSpecifier, precisionFixed, precisionRound, precisionPrefix, format, formatPrefix } from 'd3-format';\nimport { SECONDS, MINUTES, HOURS, DATE, WEEK, MONTH, QUARTER, YEAR, MILLISECONDS, DAY, timeInterval, utcInterval } from 'vega-time';\nimport { isString, isObject, error, extend } from 'vega-util';\nimport { timeFormatLocale as timeFormatLocale$1, timeFormat, timeParse, utcFormat, utcParse } from 'd3-time-format';\nfunction memoize(method) {\n  const cache = {};\n  return spec => cache[spec] || (cache[spec] = method(spec));\n}\nfunction trimZeroes(numberFormat, decimalChar) {\n  return x => {\n    const str = numberFormat(x),\n      dec = str.indexOf(decimalChar);\n    if (dec < 0) return str;\n    let idx = rightmostDigit(str, dec);\n    const end = idx < str.length ? str.slice(idx) : '';\n    while (--idx > dec) if (str[idx] !== '0') {\n      ++idx;\n      break;\n    }\n    return str.slice(0, idx) + end;\n  };\n}\nfunction rightmostDigit(str, dec) {\n  let i = str.lastIndexOf('e'),\n    c;\n  if (i > 0) return i;\n  for (i = str.length; --i > dec;) {\n    c = str.charCodeAt(i);\n    if (c >= 48 && c <= 57) return i + 1; // is digit\n  }\n}\nfunction numberLocale(locale) {\n  const format = memoize(locale.format),\n    formatPrefix = locale.formatPrefix;\n  return {\n    format,\n    formatPrefix,\n    formatFloat(spec) {\n      const s = formatSpecifier(spec || ',');\n      if (s.precision == null) {\n        s.precision = 12;\n        switch (s.type) {\n          case '%':\n            s.precision -= 2;\n            break;\n          case 'e':\n            s.precision -= 1;\n            break;\n        }\n        return trimZeroes(format(s),\n        // number format\n        format('.1f')(1)[1] // decimal point character\n        );\n      } else {\n        return format(s);\n      }\n    },\n    formatSpan(start, stop, count, specifier) {\n      specifier = formatSpecifier(specifier == null ? ',f' : specifier);\n      const step = tickStep(start, stop, count),\n        value = Math.max(Math.abs(start), Math.abs(stop));\n      let precision;\n      if (specifier.precision == null) {\n        switch (specifier.type) {\n          case 's':\n            {\n              if (!isNaN(precision = precisionPrefix(step, value))) {\n                specifier.precision = precision;\n              }\n              return formatPrefix(specifier, value);\n            }\n          case '':\n          case 'e':\n          case 'g':\n          case 'p':\n          case 'r':\n            {\n              if (!isNaN(precision = precisionRound(step, value))) {\n                specifier.precision = precision - (specifier.type === 'e');\n              }\n              break;\n            }\n          case 'f':\n          case '%':\n            {\n              if (!isNaN(precision = precisionFixed(step))) {\n                specifier.precision = precision - (specifier.type === '%') * 2;\n              }\n              break;\n            }\n        }\n      }\n      return format(specifier);\n    }\n  };\n}\nlet defaultNumberLocale;\nresetNumberFormatDefaultLocale();\nfunction resetNumberFormatDefaultLocale() {\n  return defaultNumberLocale = numberLocale({\n    format: format,\n    formatPrefix: formatPrefix\n  });\n}\nfunction numberFormatLocale(definition) {\n  return numberLocale(formatLocale(definition));\n}\nfunction numberFormatDefaultLocale(definition) {\n  return arguments.length ? defaultNumberLocale = numberFormatLocale(definition) : defaultNumberLocale;\n}\nfunction timeMultiFormat(format, interval, spec) {\n  spec = spec || {};\n  if (!isObject(spec)) {\n    error(`Invalid time multi-format specifier: ${spec}`);\n  }\n  const second = interval(SECONDS),\n    minute = interval(MINUTES),\n    hour = interval(HOURS),\n    day = interval(DATE),\n    week = interval(WEEK),\n    month = interval(MONTH),\n    quarter = interval(QUARTER),\n    year = interval(YEAR),\n    L = format(spec[MILLISECONDS] || '.%L'),\n    S = format(spec[SECONDS] || ':%S'),\n    M = format(spec[MINUTES] || '%I:%M'),\n    H = format(spec[HOURS] || '%I %p'),\n    d = format(spec[DATE] || spec[DAY] || '%a %d'),\n    w = format(spec[WEEK] || '%b %d'),\n    m = format(spec[MONTH] || '%B'),\n    q = format(spec[QUARTER] || '%B'),\n    y = format(spec[YEAR] || '%Y');\n  return date => (second(date) < date ? L : minute(date) < date ? S : hour(date) < date ? M : day(date) < date ? H : month(date) < date ? week(date) < date ? d : w : year(date) < date ? quarter(date) < date ? m : q : y)(date);\n}\nfunction timeLocale(locale) {\n  const timeFormat = memoize(locale.format),\n    utcFormat = memoize(locale.utcFormat);\n  return {\n    timeFormat: spec => isString(spec) ? timeFormat(spec) : timeMultiFormat(timeFormat, timeInterval, spec),\n    utcFormat: spec => isString(spec) ? utcFormat(spec) : timeMultiFormat(utcFormat, utcInterval, spec),\n    timeParse: memoize(locale.parse),\n    utcParse: memoize(locale.utcParse)\n  };\n}\nlet defaultTimeLocale;\nresetTimeFormatDefaultLocale();\nfunction resetTimeFormatDefaultLocale() {\n  return defaultTimeLocale = timeLocale({\n    format: timeFormat,\n    parse: timeParse,\n    utcFormat: utcFormat,\n    utcParse: utcParse\n  });\n}\nfunction timeFormatLocale(definition) {\n  return timeLocale(timeFormatLocale$1(definition));\n}\nfunction timeFormatDefaultLocale(definition) {\n  return arguments.length ? defaultTimeLocale = timeFormatLocale(definition) : defaultTimeLocale;\n}\nconst createLocale = (number, time) => extend({}, number, time);\nfunction locale(numberSpec, timeSpec) {\n  const number = numberSpec ? numberFormatLocale(numberSpec) : numberFormatDefaultLocale();\n  const time = timeSpec ? timeFormatLocale(timeSpec) : timeFormatDefaultLocale();\n  return createLocale(number, time);\n}\nfunction defaultLocale(numberSpec, timeSpec) {\n  const args = arguments.length;\n  if (args && args !== 2) {\n    error('defaultLocale expects either zero or two arguments.');\n  }\n  return args ? createLocale(numberFormatDefaultLocale(numberSpec), timeFormatDefaultLocale(timeSpec)) : createLocale(numberFormatDefaultLocale(), timeFormatDefaultLocale());\n}\nfunction resetDefaultLocale() {\n  resetNumberFormatDefaultLocale();\n  resetTimeFormatDefaultLocale();\n  return defaultLocale();\n}\nexport { defaultLocale, locale, numberFormatDefaultLocale, numberFormatLocale, resetDefaultLocale, resetNumberFormatDefaultLocale, resetTimeFormatDefaultLocale, timeFormatDefaultLocale, timeFormatLocale };","map":{"version":3,"names":["tickStep","formatLocale","formatSpecifier","precisionFixed","precisionRound","precisionPrefix","format","formatPrefix","SECONDS","MINUTES","HOURS","DATE","WEEK","MONTH","QUARTER","YEAR","MILLISECONDS","DAY","timeInterval","utcInterval","isString","isObject","error","extend","timeFormatLocale","timeFormatLocale$1","timeFormat","timeParse","utcFormat","utcParse","memoize","method","cache","spec","trimZeroes","numberFormat","decimalChar","x","str","dec","indexOf","idx","rightmostDigit","end","length","slice","i","lastIndexOf","c","charCodeAt","numberLocale","locale","formatFloat","s","precision","type","formatSpan","start","stop","count","specifier","step","value","Math","max","abs","isNaN","defaultNumberLocale","resetNumberFormatDefaultLocale","numberFormatLocale","definition","numberFormatDefaultLocale","arguments","timeMultiFormat","interval","second","minute","hour","day","week","month","quarter","year","L","S","M","H","d","w","m","q","y","date","timeLocale","parse","defaultTimeLocale","resetTimeFormatDefaultLocale","timeFormatDefaultLocale","createLocale","number","time","numberSpec","timeSpec","defaultLocale","args","resetDefaultLocale"],"sources":["C:/Users/sutul/node_modules/vega-format/build/vega-format.module.js"],"sourcesContent":["import { tickStep } from 'd3-array';\nimport { formatLocale, formatSpecifier, precisionFixed, precisionRound, precisionPrefix, format, formatPrefix } from 'd3-format';\nimport { SECONDS, MINUTES, HOURS, DATE, WEEK, MONTH, QUARTER, YEAR, MILLISECONDS, DAY, timeInterval, utcInterval } from 'vega-time';\nimport { isString, isObject, error, extend } from 'vega-util';\nimport { timeFormatLocale as timeFormatLocale$1, timeFormat, timeParse, utcFormat, utcParse } from 'd3-time-format';\n\nfunction memoize (method) {\n  const cache = {};\n  return spec => cache[spec] || (cache[spec] = method(spec));\n}\n\nfunction trimZeroes(numberFormat, decimalChar) {\n  return x => {\n    const str = numberFormat(x),\n      dec = str.indexOf(decimalChar);\n    if (dec < 0) return str;\n    let idx = rightmostDigit(str, dec);\n    const end = idx < str.length ? str.slice(idx) : '';\n    while (--idx > dec) if (str[idx] !== '0') {\n      ++idx;\n      break;\n    }\n    return str.slice(0, idx) + end;\n  };\n}\nfunction rightmostDigit(str, dec) {\n  let i = str.lastIndexOf('e'),\n    c;\n  if (i > 0) return i;\n  for (i = str.length; --i > dec;) {\n    c = str.charCodeAt(i);\n    if (c >= 48 && c <= 57) return i + 1; // is digit\n  }\n}\nfunction numberLocale(locale) {\n  const format = memoize(locale.format),\n    formatPrefix = locale.formatPrefix;\n  return {\n    format,\n    formatPrefix,\n    formatFloat(spec) {\n      const s = formatSpecifier(spec || ',');\n      if (s.precision == null) {\n        s.precision = 12;\n        switch (s.type) {\n          case '%':\n            s.precision -= 2;\n            break;\n          case 'e':\n            s.precision -= 1;\n            break;\n        }\n        return trimZeroes(format(s),\n        // number format\n        format('.1f')(1)[1] // decimal point character\n        );\n      } else {\n        return format(s);\n      }\n    },\n    formatSpan(start, stop, count, specifier) {\n      specifier = formatSpecifier(specifier == null ? ',f' : specifier);\n      const step = tickStep(start, stop, count),\n        value = Math.max(Math.abs(start), Math.abs(stop));\n      let precision;\n      if (specifier.precision == null) {\n        switch (specifier.type) {\n          case 's':\n            {\n              if (!isNaN(precision = precisionPrefix(step, value))) {\n                specifier.precision = precision;\n              }\n              return formatPrefix(specifier, value);\n            }\n          case '':\n          case 'e':\n          case 'g':\n          case 'p':\n          case 'r':\n            {\n              if (!isNaN(precision = precisionRound(step, value))) {\n                specifier.precision = precision - (specifier.type === 'e');\n              }\n              break;\n            }\n          case 'f':\n          case '%':\n            {\n              if (!isNaN(precision = precisionFixed(step))) {\n                specifier.precision = precision - (specifier.type === '%') * 2;\n              }\n              break;\n            }\n        }\n      }\n      return format(specifier);\n    }\n  };\n}\nlet defaultNumberLocale;\nresetNumberFormatDefaultLocale();\nfunction resetNumberFormatDefaultLocale() {\n  return defaultNumberLocale = numberLocale({\n    format: format,\n    formatPrefix: formatPrefix\n  });\n}\nfunction numberFormatLocale(definition) {\n  return numberLocale(formatLocale(definition));\n}\nfunction numberFormatDefaultLocale(definition) {\n  return arguments.length ? defaultNumberLocale = numberFormatLocale(definition) : defaultNumberLocale;\n}\n\nfunction timeMultiFormat(format, interval, spec) {\n  spec = spec || {};\n  if (!isObject(spec)) {\n    error(`Invalid time multi-format specifier: ${spec}`);\n  }\n  const second = interval(SECONDS),\n    minute = interval(MINUTES),\n    hour = interval(HOURS),\n    day = interval(DATE),\n    week = interval(WEEK),\n    month = interval(MONTH),\n    quarter = interval(QUARTER),\n    year = interval(YEAR),\n    L = format(spec[MILLISECONDS] || '.%L'),\n    S = format(spec[SECONDS] || ':%S'),\n    M = format(spec[MINUTES] || '%I:%M'),\n    H = format(spec[HOURS] || '%I %p'),\n    d = format(spec[DATE] || spec[DAY] || '%a %d'),\n    w = format(spec[WEEK] || '%b %d'),\n    m = format(spec[MONTH] || '%B'),\n    q = format(spec[QUARTER] || '%B'),\n    y = format(spec[YEAR] || '%Y');\n  return date => (second(date) < date ? L : minute(date) < date ? S : hour(date) < date ? M : day(date) < date ? H : month(date) < date ? week(date) < date ? d : w : year(date) < date ? quarter(date) < date ? m : q : y)(date);\n}\nfunction timeLocale(locale) {\n  const timeFormat = memoize(locale.format),\n    utcFormat = memoize(locale.utcFormat);\n  return {\n    timeFormat: spec => isString(spec) ? timeFormat(spec) : timeMultiFormat(timeFormat, timeInterval, spec),\n    utcFormat: spec => isString(spec) ? utcFormat(spec) : timeMultiFormat(utcFormat, utcInterval, spec),\n    timeParse: memoize(locale.parse),\n    utcParse: memoize(locale.utcParse)\n  };\n}\nlet defaultTimeLocale;\nresetTimeFormatDefaultLocale();\nfunction resetTimeFormatDefaultLocale() {\n  return defaultTimeLocale = timeLocale({\n    format: timeFormat,\n    parse: timeParse,\n    utcFormat: utcFormat,\n    utcParse: utcParse\n  });\n}\nfunction timeFormatLocale(definition) {\n  return timeLocale(timeFormatLocale$1(definition));\n}\nfunction timeFormatDefaultLocale(definition) {\n  return arguments.length ? defaultTimeLocale = timeFormatLocale(definition) : defaultTimeLocale;\n}\n\nconst createLocale = (number, time) => extend({}, number, time);\nfunction locale(numberSpec, timeSpec) {\n  const number = numberSpec ? numberFormatLocale(numberSpec) : numberFormatDefaultLocale();\n  const time = timeSpec ? timeFormatLocale(timeSpec) : timeFormatDefaultLocale();\n  return createLocale(number, time);\n}\nfunction defaultLocale(numberSpec, timeSpec) {\n  const args = arguments.length;\n  if (args && args !== 2) {\n    error('defaultLocale expects either zero or two arguments.');\n  }\n  return args ? createLocale(numberFormatDefaultLocale(numberSpec), timeFormatDefaultLocale(timeSpec)) : createLocale(numberFormatDefaultLocale(), timeFormatDefaultLocale());\n}\nfunction resetDefaultLocale() {\n  resetNumberFormatDefaultLocale();\n  resetTimeFormatDefaultLocale();\n  return defaultLocale();\n}\n\nexport { defaultLocale, locale, numberFormatDefaultLocale, numberFormatLocale, resetDefaultLocale, resetNumberFormatDefaultLocale, resetTimeFormatDefaultLocale, timeFormatDefaultLocale, timeFormatLocale };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}