{"ast":null,"code":"import { isString } from 'vega';\nimport { stringValue } from 'vega-util';\nimport { FACET_CHANNELS } from '../../channel';\nimport { vals } from '../../util';\nimport { isFacetModel } from '../model';\nimport interval from './interval';\nimport point from './point';\nimport clear from './clear';\nimport inputs from './inputs';\nimport nearest from './nearest';\nimport project from './project';\nimport scales from './scales';\nimport legends from './legends';\nimport toggle from './toggle';\nimport translate from './translate';\nimport zoom from './zoom';\nexport const STORE = '_store';\nexport const TUPLE = '_tuple';\nexport const MODIFY = '_modify';\nexport const SELECTION_DOMAIN = '_selection_domain_';\nexport const VL_SELECTION_RESOLVE = 'vlSelectionResolve';\n// Order matters for parsing and assembly.\nexport const selectionCompilers = [point, interval, project, toggle,\n// Bindings may disable direct manipulation.\ninputs, scales, legends, clear, translate, zoom, nearest];\nfunction getFacetModel(model) {\n  let parent = model.parent;\n  while (parent) {\n    if (isFacetModel(parent)) break;\n    parent = parent.parent;\n  }\n  return parent;\n}\nexport function unitName(model) {\n  let {\n    escape\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    escape: true\n  };\n  let name = escape ? stringValue(model.name) : model.name;\n  const facetModel = getFacetModel(model);\n  if (facetModel) {\n    const {\n      facet\n    } = facetModel;\n    for (const channel of FACET_CHANNELS) {\n      if (facet[channel]) {\n        name += ` + '__facet_${channel}_' + (facet[${stringValue(facetModel.vgField(channel))}])`;\n      }\n    }\n  }\n  return name;\n}\nexport function requiresSelectionId(model) {\n  return vals(model.component.selection ?? {}).reduce((identifier, selCmpt) => {\n    return identifier || selCmpt.project.hasSelectionId;\n  }, false);\n}\n// Binding a point selection to query widgets or legends disables default direct manipulation interaction.\n// A user can choose to re-enable it by explicitly specifying triggering input events.\nexport function disableDirectManipulation(selCmpt, selDef) {\n  if (isString(selDef.select) || !selDef.select.on) delete selCmpt.events;\n  if (isString(selDef.select) || !selDef.select.clear) delete selCmpt.clear;\n  if (isString(selDef.select) || !selDef.select.toggle) delete selCmpt.toggle;\n}","map":{"version":3,"names":["isString","stringValue","FACET_CHANNELS","vals","isFacetModel","interval","point","clear","inputs","nearest","project","scales","legends","toggle","translate","zoom","STORE","TUPLE","MODIFY","SELECTION_DOMAIN","VL_SELECTION_RESOLVE","selectionCompilers","getFacetModel","model","parent","unitName","escape","arguments","length","undefined","name","facetModel","facet","channel","vgField","requiresSelectionId","component","selection","reduce","identifier","selCmpt","hasSelectionId","disableDirectManipulation","selDef","select","on","events"],"sources":["C:\\Users\\sutul\\node_modules\\vega-lite\\src\\compile\\selection\\index.ts"],"sourcesContent":["import {Binding, isString, Signal, Stream} from 'vega';\nimport {stringValue} from 'vega-util';\nimport {FACET_CHANNELS} from '../../channel';\nimport {\n  BrushConfig,\n  LegendBinding,\n  SelectionInit,\n  SelectionInitInterval,\n  SelectionResolution,\n  SelectionType\n} from '../../selection';\nimport {Dict, vals} from '../../util';\nimport {OutputNode} from '../data/dataflow';\nimport {FacetModel} from '../facet';\nimport {isFacetModel, Model} from '../model';\nimport {UnitModel} from '../unit';\nimport interval from './interval';\nimport point from './point';\nimport {SelectionProjection, SelectionProjectionComponent} from './project';\nimport {SelectionParameter} from '../../selection';\nimport clear from './clear';\nimport inputs from './inputs';\nimport nearest from './nearest';\nimport project from './project';\nimport scales from './scales';\nimport legends from './legends';\nimport toggle from './toggle';\nimport translate from './translate';\nimport zoom from './zoom';\nimport {ParameterName} from '../../parameter';\n\nexport const STORE = '_store';\nexport const TUPLE = '_tuple';\nexport const MODIFY = '_modify';\nexport const SELECTION_DOMAIN = '_selection_domain_';\nexport const VL_SELECTION_RESOLVE = 'vlSelectionResolve';\n\nexport interface SelectionComponent<T extends SelectionType = SelectionType> {\n  name: ParameterName;\n  type: T;\n  // Use conditional types for stricter type of init (as the type of init depends on selection type).\n  init?: (T extends 'interval' ? SelectionInitInterval : T extends 'point' ? SelectionInit : never)[][];\n  events: Stream[];\n  materialized: OutputNode;\n  bind?: 'scales' | Binding | Dict<Binding> | LegendBinding;\n  resolve: SelectionResolution;\n  mark?: BrushConfig;\n  project: SelectionProjectionComponent;\n  scales?: SelectionProjection[];\n  toggle?: string;\n  translate?: any;\n  zoom?: any;\n  nearest?: any;\n  clear?: any;\n}\n\nexport interface SelectionCompiler<T extends SelectionType = SelectionType> {\n  defined: (selCmpt: SelectionComponent) => boolean;\n  parse?: (model: UnitModel, selCmpt: SelectionComponent<T>, def: SelectionParameter<T>) => void;\n  signals?: (model: UnitModel, selCmpt: SelectionComponent<T>, signals: Signal[]) => Signal[];\n  topLevelSignals?: (model: Model, selCmpt: SelectionComponent<T>, signals: Signal[]) => Signal[];\n  modifyExpr?: (model: UnitModel, selCmpt: SelectionComponent<T>, expr: string) => string;\n  marks?: (model: UnitModel, selCmpt: SelectionComponent<T>, marks: any[]) => any[];\n}\n\n// Order matters for parsing and assembly.\nexport const selectionCompilers: SelectionCompiler[] = [\n  point,\n  interval,\n  project,\n  toggle,\n\n  // Bindings may disable direct manipulation.\n  inputs,\n  scales,\n  legends,\n\n  clear,\n  translate,\n  zoom,\n  nearest\n];\n\nfunction getFacetModel(model: Model): FacetModel {\n  let parent = model.parent;\n  while (parent) {\n    if (isFacetModel(parent)) break;\n    parent = parent.parent;\n  }\n\n  return parent as FacetModel;\n}\n\nexport function unitName(model: Model, {escape} = {escape: true}) {\n  let name = escape ? stringValue(model.name) : model.name;\n  const facetModel = getFacetModel(model);\n  if (facetModel) {\n    const {facet} = facetModel;\n    for (const channel of FACET_CHANNELS) {\n      if (facet[channel]) {\n        name += ` + '__facet_${channel}_' + (facet[${stringValue(facetModel.vgField(channel))}])`;\n      }\n    }\n  }\n  return name;\n}\n\nexport function requiresSelectionId(model: Model) {\n  return vals(model.component.selection ?? {}).reduce((identifier, selCmpt) => {\n    return identifier || selCmpt.project.hasSelectionId;\n  }, false);\n}\n\n// Binding a point selection to query widgets or legends disables default direct manipulation interaction.\n// A user can choose to re-enable it by explicitly specifying triggering input events.\nexport function disableDirectManipulation(selCmpt: SelectionComponent, selDef: SelectionParameter<'point'>) {\n  if (isString(selDef.select) || !selDef.select.on) delete selCmpt.events;\n  if (isString(selDef.select) || !selDef.select.clear) delete selCmpt.clear;\n  if (isString(selDef.select) || !selDef.select.toggle) delete selCmpt.toggle;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}