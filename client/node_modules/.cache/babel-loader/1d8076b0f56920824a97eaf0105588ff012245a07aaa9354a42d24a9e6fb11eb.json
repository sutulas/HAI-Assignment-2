{"ast":null,"code":"import _pt from \"prop-types\";\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport React from 'react';\nimport vegaEmbed from 'vega-embed';\nimport shallowEqual from './utils/shallowEqual';\nimport getUniqueFieldNames from './utils/getUniqueFieldNames';\nimport { NOOP } from './constants';\nimport addSignalListenersToView from './utils/addSignalListenersToView';\nimport computeSpecChanges from './utils/computeSpecChanges';\nimport removeSignalListenersFromView from './utils/removeSignalListenersFromView';\nimport combineSpecWithDimension from './utils/combineSpecWithDimension';\nexport default class VegaEmbed extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"containerRef\", /*#__PURE__*/React.createRef());\n    _defineProperty(this, \"resultPromise\", void 0);\n    _defineProperty(this, \"handleError\", error => {\n      const {\n        onError = NOOP\n      } = this.props;\n      onError(error, this.containerRef.current); // eslint-disable-next-line no-console\n\n      console.warn(error);\n      return undefined;\n    });\n    _defineProperty(this, \"modifyView\", action => {\n      if (this.resultPromise) {\n        this.resultPromise.then(result => {\n          if (result) {\n            action(result.view);\n          }\n          return true;\n        }).catch(this.handleError);\n      }\n    });\n  }\n  componentDidMount() {\n    this.createView();\n  }\n  componentDidUpdate(prevProps) {\n    const fieldSet = getUniqueFieldNames([this.props, prevProps]);\n    fieldSet.delete('className');\n    fieldSet.delete('signalListeners');\n    fieldSet.delete('spec');\n    fieldSet.delete('style');\n    fieldSet.delete('width');\n    fieldSet.delete('height'); // Only create a new view if necessary\n\n    if (Array.from(fieldSet).some(f => this.props[f] !== prevProps[f])) {\n      this.clearView();\n      this.createView();\n    } else {\n      const specChanges = computeSpecChanges(combineSpecWithDimension(this.props), combineSpecWithDimension(prevProps));\n      const {\n        signalListeners: newSignalListeners\n      } = this.props;\n      const {\n        signalListeners: oldSignalListeners\n      } = prevProps;\n      if (specChanges) {\n        if (specChanges.isExpensive) {\n          this.clearView();\n          this.createView();\n        } else {\n          const areSignalListenersChanged = !shallowEqual(newSignalListeners, oldSignalListeners);\n          this.modifyView(view => {\n            if (specChanges.width !== false) {\n              view.width(specChanges.width);\n            }\n            if (specChanges.height !== false) {\n              view.height(specChanges.height);\n            }\n            if (areSignalListenersChanged) {\n              if (oldSignalListeners) {\n                removeSignalListenersFromView(view, oldSignalListeners);\n              }\n              if (newSignalListeners) {\n                addSignalListenersToView(view, newSignalListeners);\n              }\n            }\n            view.run();\n          });\n        }\n      } else if (!shallowEqual(newSignalListeners, oldSignalListeners)) {\n        this.modifyView(view => {\n          if (oldSignalListeners) {\n            removeSignalListenersFromView(view, oldSignalListeners);\n          }\n          if (newSignalListeners) {\n            addSignalListenersToView(view, newSignalListeners);\n          }\n          view.run();\n        });\n      }\n    }\n  }\n  componentWillUnmount() {\n    this.clearView();\n  }\n  createView() {\n    const {\n      spec,\n      onNewView,\n      signalListeners = {},\n      width,\n      height,\n      ...options\n    } = this.props;\n    if (this.containerRef.current) {\n      const finalSpec = combineSpecWithDimension(this.props);\n      this.resultPromise = vegaEmbed(this.containerRef.current, finalSpec, options).then(result => {\n        if (result) {\n          const {\n            view\n          } = result;\n          if (addSignalListenersToView(view, signalListeners)) {\n            view.run();\n          }\n        }\n        return result;\n      }).catch(this.handleError);\n      if (onNewView) {\n        this.modifyView(onNewView);\n      }\n    }\n  }\n  clearView() {\n    if (this.resultPromise) {\n      this.resultPromise.then(result => {\n        if (result) {\n          result.finalize();\n        }\n      }).catch(this.handleError);\n    }\n    this.resultPromise = undefined;\n    return this;\n  }\n  render() {\n    const {\n      className,\n      style\n    } = this.props; // Create the container Vega draws inside\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.containerRef,\n      className: className,\n      style: style\n    });\n  }\n}\n_defineProperty(VegaEmbed, \"propTypes\", {\n  className: _pt.string,\n  onError: _pt.func\n});","map":{"version":3,"names":["_pt","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","vegaEmbed","shallowEqual","getUniqueFieldNames","NOOP","addSignalListenersToView","computeSpecChanges","removeSignalListenersFromView","combineSpecWithDimension","VegaEmbed","PureComponent","constructor","arguments","createRef","error","onError","props","containerRef","current","console","warn","undefined","action","resultPromise","then","result","view","catch","handleError","componentDidMount","createView","componentDidUpdate","prevProps","fieldSet","delete","Array","from","some","f","clearView","specChanges","signalListeners","newSignalListeners","oldSignalListeners","isExpensive","areSignalListenersChanged","modifyView","width","height","run","componentWillUnmount","spec","onNewView","options","finalSpec","finalize","render","className","style","createElement","ref","string","func"],"sources":["C:/Users/sutul/OneDrive/Desktop/Fall2024/Human AI Interaction/HAI-Assignment-2/client/node_modules/react-vega/esm/VegaEmbed.js"],"sourcesContent":["import _pt from \"prop-types\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport vegaEmbed from 'vega-embed';\nimport shallowEqual from './utils/shallowEqual';\nimport getUniqueFieldNames from './utils/getUniqueFieldNames';\nimport { NOOP } from './constants';\nimport addSignalListenersToView from './utils/addSignalListenersToView';\nimport computeSpecChanges from './utils/computeSpecChanges';\nimport removeSignalListenersFromView from './utils/removeSignalListenersFromView';\nimport combineSpecWithDimension from './utils/combineSpecWithDimension';\nexport default class VegaEmbed extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"containerRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"resultPromise\", void 0);\n\n    _defineProperty(this, \"handleError\", error => {\n      const {\n        onError = NOOP\n      } = this.props;\n      onError(error, this.containerRef.current); // eslint-disable-next-line no-console\n\n      console.warn(error);\n      return undefined;\n    });\n\n    _defineProperty(this, \"modifyView\", action => {\n      if (this.resultPromise) {\n        this.resultPromise.then(result => {\n          if (result) {\n            action(result.view);\n          }\n\n          return true;\n        }).catch(this.handleError);\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.createView();\n  }\n\n  componentDidUpdate(prevProps) {\n    const fieldSet = getUniqueFieldNames([this.props, prevProps]);\n    fieldSet.delete('className');\n    fieldSet.delete('signalListeners');\n    fieldSet.delete('spec');\n    fieldSet.delete('style');\n    fieldSet.delete('width');\n    fieldSet.delete('height'); // Only create a new view if necessary\n\n    if (Array.from(fieldSet).some(f => this.props[f] !== prevProps[f])) {\n      this.clearView();\n      this.createView();\n    } else {\n      const specChanges = computeSpecChanges(combineSpecWithDimension(this.props), combineSpecWithDimension(prevProps));\n      const {\n        signalListeners: newSignalListeners\n      } = this.props;\n      const {\n        signalListeners: oldSignalListeners\n      } = prevProps;\n\n      if (specChanges) {\n        if (specChanges.isExpensive) {\n          this.clearView();\n          this.createView();\n        } else {\n          const areSignalListenersChanged = !shallowEqual(newSignalListeners, oldSignalListeners);\n          this.modifyView(view => {\n            if (specChanges.width !== false) {\n              view.width(specChanges.width);\n            }\n\n            if (specChanges.height !== false) {\n              view.height(specChanges.height);\n            }\n\n            if (areSignalListenersChanged) {\n              if (oldSignalListeners) {\n                removeSignalListenersFromView(view, oldSignalListeners);\n              }\n\n              if (newSignalListeners) {\n                addSignalListenersToView(view, newSignalListeners);\n              }\n            }\n\n            view.run();\n          });\n        }\n      } else if (!shallowEqual(newSignalListeners, oldSignalListeners)) {\n        this.modifyView(view => {\n          if (oldSignalListeners) {\n            removeSignalListenersFromView(view, oldSignalListeners);\n          }\n\n          if (newSignalListeners) {\n            addSignalListenersToView(view, newSignalListeners);\n          }\n\n          view.run();\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.clearView();\n  }\n\n  createView() {\n    const {\n      spec,\n      onNewView,\n      signalListeners = {},\n      width,\n      height,\n      ...options\n    } = this.props;\n\n    if (this.containerRef.current) {\n      const finalSpec = combineSpecWithDimension(this.props);\n      this.resultPromise = vegaEmbed(this.containerRef.current, finalSpec, options).then(result => {\n        if (result) {\n          const {\n            view\n          } = result;\n\n          if (addSignalListenersToView(view, signalListeners)) {\n            view.run();\n          }\n        }\n\n        return result;\n      }).catch(this.handleError);\n\n      if (onNewView) {\n        this.modifyView(onNewView);\n      }\n    }\n  }\n\n  clearView() {\n    if (this.resultPromise) {\n      this.resultPromise.then(result => {\n        if (result) {\n          result.finalize();\n        }\n      }).catch(this.handleError);\n    }\n\n    this.resultPromise = undefined;\n    return this;\n  }\n\n  render() {\n    const {\n      className,\n      style\n    } = this.props; // Create the container Vega draws inside\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.containerRef,\n      className: className,\n      style: style\n    });\n  }\n\n}\n\n_defineProperty(VegaEmbed, \"propTypes\", {\n  className: _pt.string,\n  onError: _pt.func\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}