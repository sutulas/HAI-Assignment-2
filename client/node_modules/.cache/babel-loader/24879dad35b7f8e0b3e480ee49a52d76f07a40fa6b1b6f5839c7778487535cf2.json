{"ast":null,"code":"import{useState,useEffect,useRef}from'react';import'./App.css';import userAvatar from'./images/user-avatar.jpg';import botAvatar from'./images/bot-avatar.jpg';import*as d3 from'd3-dsv';// Import d3-dsv for CSV parsing\nimport{VegaLite}from'react-vega';// Import Vega-Lite component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const url=process.env.NODE_ENV==='production'?'https://hai-assignment-2.onrender.com/':'http://127.0.0.1:8000/';function App(){const[message,setMessage]=useState(\"\");const[response,setResponse]=useState([{type:\"bot\",text:\"Upload a CSV file and then ask visualization questions\"}]);const[file,setFile]=useState(null);const[dragActive,setDragActive]=useState(false);const[csvData,setCsvData]=useState(null);// State to hold parsed CSV data\nconst[showPreview,setShowPreview]=useState(false);// State to toggle CSV preview\nconst chatBoxRef=useRef(null);const inputRef=useRef(null);useEffect(()=>{if(chatBoxRef.current){chatBoxRef.current.scrollTop=chatBoxRef.current.scrollHeight;}},[response]);function sendMessage(){if(message===\"\")return;const newMessage={type:\"user\",text:message};setResponse([...response,newMessage]);fetch(`${url}query`,{method:'POST',body:JSON.stringify({prompt:message}),headers:{'Content-Type':'application/json'}}).then(response=>response.json()).then(data=>{const botResponse={type:\"bot\",text:data.response};// If the chart spec is included in the response, add it to the response array\nif(data.chart){const botChartResponse={type:\"bot-chart\",chartSpec:data.chart};// Custom message type for charts\nsetResponse([...response,newMessage,botChartResponse,botResponse]);}else{setResponse([...response,newMessage,botResponse]);}});setMessage(\"\");}function handleMessage(e){setMessage(e.target.value);}function handleKeyDown(e){if(e.key==='Enter')sendMessage();}// Check if the uploaded file is a CSV\nfunction isCSV(file){return file&&file.type==='text/csv';}function handleFileUpload(e){const uploadedFile=e.target.files[0];if(!isCSV(uploadedFile)){const botResponse={type:\"bot\",text:\"Error: Please upload a valid CSV file.\"};setResponse([...response,botResponse]);return;}setFile(uploadedFile);parseCSV(uploadedFile);sendFile(uploadedFile);// Automatically send file to backend after upload\n}function sendFile(uploadedFile){if(uploadedFile){const formData=new FormData();formData.append('file',uploadedFile);fetch(`${url}uploadfile/`,{method:'POST',body:formData}).then(response=>response.json()).catch(()=>{const botResponse={type:\"bot\",text:\"Error processing file.\"};setResponse([...response,botResponse]);});}}// Parse CSV file and store data in state using d3-dsv\nfunction parseCSV(file){const reader=new FileReader();reader.onload=function(e){const text=e.target.result;const parsedData=d3.csvParse(text,d3.autoType);// Parse CSV and auto convert types\nsetCsvData(parsedData.slice(0,50));// Store only the first 50 rows for preview\n};reader.readAsText(file);}const handleDrag=e=>{e.preventDefault();e.stopPropagation();setDragActive(true);};const handleDragLeave=e=>{e.preventDefault();e.stopPropagation();setDragActive(false);};const handleDrop=e=>{e.preventDefault();e.stopPropagation();setDragActive(false);const droppedFile=e.dataTransfer.files[0];// Check if dropped file is a CSV\nif(!isCSV(droppedFile)){const botResponse={type:\"bot\",text:\"Error: Please upload a valid CSV file.\"};setResponse([...response,botResponse]);return;}setFile(droppedFile);parseCSV(droppedFile);sendFile(droppedFile);// Automatically send file to backend after drop\n};const handleClick=()=>{inputRef.current.click();};// Function to handle CSV preview toggle\nconst togglePreview=()=>{setShowPreview(!showPreview);};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"chat-title\",children:\"AI Data Visualization Assistant\"}),/*#__PURE__*/_jsxs(\"div\",{className:`drag-and-drop-area ${dragActive?'active':''}`,onDragEnter:handleDrag,onDragOver:handleDrag,onDragLeave:handleDragLeave,onDrop:handleDrop,onClick:handleClick,children:[/*#__PURE__*/_jsx(\"p\",{children:\"Drag and drop a CSV file here or click to upload\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".csv\",ref:inputRef,onChange:handleFileUpload,style:{display:'none'}})]}),file&&/*#__PURE__*/_jsx(\"div\",{className:\"file-actions\",children:/*#__PURE__*/_jsx(\"button\",{onClick:togglePreview,className:\"preview-button\",children:showPreview?'Hide Preview':'Preview CSV'})}),showPreview&&csvData&&/*#__PURE__*/_jsx(\"div\",{className:\"csv-preview\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:Object.keys(csvData[0]||{}).map((header,idx)=>/*#__PURE__*/_jsx(\"th\",{children:header},idx))})}),/*#__PURE__*/_jsx(\"tbody\",{children:csvData.map((row,idx)=>/*#__PURE__*/_jsx(\"tr\",{children:Object.values(row).map((val,idx)=>/*#__PURE__*/_jsx(\"td\",{children:val},idx))},idx))})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-box\",ref:chatBoxRef,children:response.map((msg,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`chat-message ${msg.type}`,children:[/*#__PURE__*/_jsx(\"img\",{src:msg.type===\"user\"?userAvatar:botAvatar,alt:\"avatar\",className:\"avatar\"}),/*#__PURE__*/_jsx(\"div\",{className:\"message-bubble\",children:msg.type===\"bot-chart\"?/*#__PURE__*/_jsxs(\"div\",{className:\"bot-chart-message\",children:[/*#__PURE__*/_jsx(VegaLite,{spec:msg.chartSpec}),\" \"]}):/*#__PURE__*/_jsx(\"span\",{children:msg.text})})]},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type your message here\",value:message,className:\"input-field\",onInput:handleMessage,onKeyDown:handleKeyDown}),/*#__PURE__*/_jsx(\"button\",{className:\"send-button\",onClick:sendMessage,children:\"Send\"})]})]});}export default App;","map":{"version":3,"names":["useState","useEffect","useRef","userAvatar","botAvatar","d3","VegaLite","jsx","_jsx","jsxs","_jsxs","url","process","env","NODE_ENV","App","message","setMessage","response","setResponse","type","text","file","setFile","dragActive","setDragActive","csvData","setCsvData","showPreview","setShowPreview","chatBoxRef","inputRef","current","scrollTop","scrollHeight","sendMessage","newMessage","fetch","method","body","JSON","stringify","prompt","headers","then","json","data","botResponse","chart","botChartResponse","chartSpec","handleMessage","e","target","value","handleKeyDown","key","isCSV","handleFileUpload","uploadedFile","files","parseCSV","sendFile","formData","FormData","append","catch","reader","FileReader","onload","result","parsedData","csvParse","autoType","slice","readAsText","handleDrag","preventDefault","stopPropagation","handleDragLeave","handleDrop","droppedFile","dataTransfer","handleClick","click","togglePreview","className","children","onDragEnter","onDragOver","onDragLeave","onDrop","onClick","accept","ref","onChange","style","display","Object","keys","map","header","idx","row","values","val","msg","index","src","alt","spec","placeholder","onInput","onKeyDown"],"sources":["C:/Users/sutul/OneDrive/Desktop/Fall2024/Human AI Interaction/HAI-Assignment-2/client/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport userAvatar from './images/user-avatar.jpg';\r\nimport botAvatar from './images/bot-avatar.jpg';\r\nimport * as d3 from 'd3-dsv'; // Import d3-dsv for CSV parsing\r\nimport { VegaLite } from 'react-vega'; // Import Vega-Lite component\r\n\r\nconst url = process.env.NODE_ENV === 'production' ? 'https://hai-assignment-2.onrender.com/' : 'http://127.0.0.1:8000/';\r\n\r\nfunction App() {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [response, setResponse] = useState([{ type: \"bot\", text: \"Upload a CSV file and then ask visualization questions\" }]);\r\n  const [file, setFile] = useState(null);\r\n  const [dragActive, setDragActive] = useState(false);\r\n  const [csvData, setCsvData] = useState(null); // State to hold parsed CSV data\r\n  const [showPreview, setShowPreview] = useState(false); // State to toggle CSV preview\r\n\r\n  const chatBoxRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (chatBoxRef.current) {\r\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\r\n    }\r\n  }, [response]);\r\n\r\n  function sendMessage() {\r\n    if (message === \"\") return;\r\n\r\n    const newMessage = { type: \"user\", text: message };\r\n    setResponse([...response, newMessage]);\r\n\r\n    fetch(`${url}query`, {\r\n      method: 'POST',\r\n      body: JSON.stringify({ prompt: message }),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const botResponse = { type: \"bot\", text: data.response };\r\n\r\n        // If the chart spec is included in the response, add it to the response array\r\n        if (data.chart) {\r\n          const botChartResponse = { type: \"bot-chart\", chartSpec: data.chart }; // Custom message type for charts\r\n          setResponse([...response, newMessage, botChartResponse, botResponse]);\r\n        } else {\r\n          setResponse([...response, newMessage, botResponse]);\r\n        }\r\n      });\r\n\r\n    setMessage(\"\");\r\n  }\r\n\r\n  function handleMessage(e) {\r\n    setMessage(e.target.value);\r\n  }\r\n\r\n  function handleKeyDown(e) {\r\n    if (e.key === 'Enter') sendMessage();\r\n  }\r\n\r\n  // Check if the uploaded file is a CSV\r\n  function isCSV(file) {\r\n    return file && file.type === 'text/csv';\r\n  }\r\n\r\n  function handleFileUpload(e) {\r\n    const uploadedFile = e.target.files[0];\r\n    \r\n    if (!isCSV(uploadedFile)) {\r\n      const botResponse = { type: \"bot\", text: \"Error: Please upload a valid CSV file.\" };\r\n      setResponse([...response, botResponse]);\r\n      return;\r\n    }\r\n\r\n    setFile(uploadedFile);\r\n    parseCSV(uploadedFile);\r\n    sendFile(uploadedFile); // Automatically send file to backend after upload\r\n  }\r\n\r\n  function sendFile(uploadedFile) {\r\n    if (uploadedFile) {\r\n      const formData = new FormData();\r\n      formData.append('file', uploadedFile);\r\n\r\n      fetch(`${url}uploadfile/`, {\r\n        method: 'POST',\r\n        body: formData,\r\n      })\r\n        .then(response => response.json())\r\n        .catch(() => {\r\n          const botResponse = { type: \"bot\", text: \"Error processing file.\" };\r\n          setResponse([...response, botResponse]);\r\n        });\r\n    }\r\n  }\r\n\r\n  // Parse CSV file and store data in state using d3-dsv\r\n  function parseCSV(file) {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = function (e) {\r\n      const text = e.target.result;\r\n      const parsedData = d3.csvParse(text, d3.autoType); // Parse CSV and auto convert types\r\n      setCsvData(parsedData.slice(0, 50)); // Store only the first 50 rows for preview\r\n    };\r\n\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  const handleDrag = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(true);\r\n  };\r\n\r\n  const handleDragLeave = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(false);\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(false);\r\n\r\n    const droppedFile = e.dataTransfer.files[0];\r\n\r\n    // Check if dropped file is a CSV\r\n    if (!isCSV(droppedFile)) {\r\n      const botResponse = { type: \"bot\", text: \"Error: Please upload a valid CSV file.\" };\r\n      setResponse([...response, botResponse]);\r\n      return;\r\n    }\r\n\r\n    setFile(droppedFile);\r\n    parseCSV(droppedFile);\r\n    sendFile(droppedFile); // Automatically send file to backend after drop\r\n  };\r\n\r\n  const handleClick = () => {\r\n    inputRef.current.click();\r\n  };\r\n\r\n  // Function to handle CSV preview toggle\r\n  const togglePreview = () => {\r\n    setShowPreview(!showPreview);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h1 className=\"chat-title\">AI Data Visualization Assistant</h1>\r\n\r\n      <div\r\n        className={`drag-and-drop-area ${dragActive ? 'active' : ''}`}\r\n        onDragEnter={handleDrag}\r\n        onDragOver={handleDrag}\r\n        onDragLeave={handleDragLeave}\r\n        onDrop={handleDrop}\r\n        onClick={handleClick}\r\n      >\r\n        <p>Drag and drop a CSV file here or click to upload</p>\r\n        <input\r\n          type=\"file\"\r\n          accept=\".csv\"\r\n          ref={inputRef}\r\n          onChange={handleFileUpload}\r\n          style={{ display: 'none' }}\r\n        />\r\n      </div>\r\n\r\n      {file && (\r\n        <div className=\"file-actions\">\r\n          <button onClick={togglePreview} className=\"preview-button\">{showPreview ? 'Hide Preview' : 'Preview CSV'}</button>\r\n        </div>\r\n      )}\r\n\r\n      {showPreview && csvData && (\r\n        <div className=\"csv-preview\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                {Object.keys(csvData[0] || {}).map((header, idx) => (\r\n                  <th key={idx}>{header}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {csvData.map((row, idx) => (\r\n                <tr key={idx}>\r\n                  {Object.values(row).map((val, idx) => (\r\n                    <td key={idx}>{val}</td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"chat-box\" ref={chatBoxRef}>\r\n        {response.map((msg, index) => (\r\n          <div key={index} className={`chat-message ${msg.type}`}>\r\n            <img\r\n              src={msg.type === \"user\" ? userAvatar : botAvatar}\r\n              alt=\"avatar\"\r\n              className=\"avatar\"\r\n            />\r\n            <div className=\"message-bubble\">\r\n              {msg.type === \"bot-chart\" ? (\r\n                <div className=\"bot-chart-message\">\r\n                  <VegaLite spec={msg.chartSpec} /> {/* Render Vega-Lite chart for bot-chart messages */}\r\n                </div>\r\n              ) : (\r\n                <span>{msg.text}</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message here\"\r\n          value={message}\r\n          className=\"input-field\"\r\n          onInput={handleMessage}\r\n          onKeyDown={handleKeyDown}\r\n        />\r\n        <button className=\"send-button\" onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}