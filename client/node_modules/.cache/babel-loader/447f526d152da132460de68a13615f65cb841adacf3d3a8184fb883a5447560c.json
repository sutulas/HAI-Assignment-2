{"ast":null,"code":"import { isString } from 'vega-util';\nimport { fieldFilterExpression, isSelectionPredicate } from '../predicate';\nimport { logicalExpr } from '../util';\nimport { parseSelectionPredicate } from './selection/parse';\n/**\n * Converts a predicate into an expression.\n */\n// model is only used for selection filters.\nexport function expression(model, filterOp, node) {\n  return logicalExpr(filterOp, predicate => {\n    if (isString(predicate)) {\n      return predicate;\n    } else if (isSelectionPredicate(predicate)) {\n      return parseSelectionPredicate(model, predicate, node);\n    } else {\n      // Filter Object\n      return fieldFilterExpression(predicate);\n    }\n  });\n}","map":{"version":3,"names":["isString","fieldFilterExpression","isSelectionPredicate","logicalExpr","parseSelectionPredicate","expression","model","filterOp","node","predicate"],"sources":["C:\\Users\\sutul\\node_modules\\vega-lite\\src\\compile\\predicate.ts"],"sourcesContent":["import {isString} from 'vega-util';\nimport {LogicalComposition} from '../logical';\nimport {fieldFilterExpression, isSelectionPredicate, Predicate} from '../predicate';\nimport {logicalExpr} from '../util';\nimport {DataFlowNode} from './data/dataflow';\nimport {Model} from './model';\nimport {parseSelectionPredicate} from './selection/parse';\n\n/**\n * Converts a predicate into an expression.\n */\n// model is only used for selection filters.\nexport function expression(model: Model, filterOp: LogicalComposition<Predicate>, node?: DataFlowNode): string {\n  return logicalExpr(filterOp, (predicate: Predicate) => {\n    if (isString(predicate)) {\n      return predicate;\n    } else if (isSelectionPredicate(predicate)) {\n      return parseSelectionPredicate(model, predicate, node);\n    } else {\n      // Filter Object\n      return fieldFilterExpression(predicate);\n    }\n  });\n}\n"],"mappings":"AAAA,SAAQA,QAAQ,QAAO,WAAW;AAElC,SAAQC,qBAAqB,EAAEC,oBAAoB,QAAkB,cAAc;AACnF,SAAQC,WAAW,QAAO,SAAS;AAGnC,SAAQC,uBAAuB,QAAO,mBAAmB;AAEzD;;;AAGA;AACA,OAAM,SAAUC,UAAUA,CAACC,KAAY,EAAEC,QAAuC,EAAEC,IAAmB;EACnG,OAAOL,WAAW,CAACI,QAAQ,EAAGE,SAAoB,IAAI;IACpD,IAAIT,QAAQ,CAACS,SAAS,CAAC,EAAE;MACvB,OAAOA,SAAS;IAClB,CAAC,MAAM,IAAIP,oBAAoB,CAACO,SAAS,CAAC,EAAE;MAC1C,OAAOL,uBAAuB,CAACE,KAAK,EAAEG,SAAS,EAAED,IAAI,CAAC;IACxD,CAAC,MAAM;MACL;MACA,OAAOP,qBAAqB,CAACQ,SAAS,CAAC;IACzC;EACF,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}