{"ast":null,"code":"import * as log from '../log';\nimport { isAnyConcatSpec, isFacetSpec, isLayerSpec, isUnitSpec } from '../spec';\nimport { ConcatModel } from './concat';\nimport { FacetModel } from './facet';\nimport { LayerModel } from './layer';\nimport { UnitModel } from './unit';\nexport function buildModel(spec, parent, parentGivenName, unitSize, config) {\n  if (isFacetSpec(spec)) {\n    return new FacetModel(spec, parent, parentGivenName, config);\n  } else if (isLayerSpec(spec)) {\n    return new LayerModel(spec, parent, parentGivenName, unitSize, config);\n  } else if (isUnitSpec(spec)) {\n    return new UnitModel(spec, parent, parentGivenName, unitSize, config);\n  } else if (isAnyConcatSpec(spec)) {\n    return new ConcatModel(spec, parent, parentGivenName, config);\n  }\n  throw new Error(log.message.invalidSpec(spec));\n}","map":{"version":3,"names":["log","isAnyConcatSpec","isFacetSpec","isLayerSpec","isUnitSpec","ConcatModel","FacetModel","LayerModel","UnitModel","buildModel","spec","parent","parentGivenName","unitSize","config","Error","message","invalidSpec"],"sources":["C:\\Users\\sutul\\node_modules\\vega-lite\\src\\compile\\buildmodel.ts"],"sourcesContent":["import type {SignalRef} from 'vega';\nimport {Config} from '../config';\nimport * as log from '../log';\nimport {isAnyConcatSpec, isFacetSpec, isLayerSpec, isUnitSpec, LayoutSizeMixins, NormalizedSpec} from '../spec';\nimport {ConcatModel} from './concat';\nimport {FacetModel} from './facet';\nimport {LayerModel} from './layer';\nimport {Model} from './model';\nimport {UnitModel} from './unit';\n\nexport function buildModel(\n  spec: NormalizedSpec,\n  parent: Model,\n  parentGivenName: string,\n  unitSize: LayoutSizeMixins,\n  config: Config<SignalRef>\n): Model {\n  if (isFacetSpec(spec)) {\n    return new FacetModel(spec, parent, parentGivenName, config);\n  } else if (isLayerSpec(spec)) {\n    return new LayerModel(spec, parent, parentGivenName, unitSize, config);\n  } else if (isUnitSpec(spec)) {\n    return new UnitModel(spec, parent, parentGivenName, unitSize, config);\n  } else if (isAnyConcatSpec(spec)) {\n    return new ConcatModel(spec, parent, parentGivenName, config);\n  }\n  throw new Error(log.message.invalidSpec(spec));\n}\n"],"mappings":"AAEA,OAAO,KAAKA,GAAG,MAAM,QAAQ;AAC7B,SAAQC,eAAe,EAAEC,WAAW,EAAEC,WAAW,EAAEC,UAAU,QAAyC,SAAS;AAC/G,SAAQC,WAAW,QAAO,UAAU;AACpC,SAAQC,UAAU,QAAO,SAAS;AAClC,SAAQC,UAAU,QAAO,SAAS;AAElC,SAAQC,SAAS,QAAO,QAAQ;AAEhC,OAAM,SAAUC,UAAUA,CACxBC,IAAoB,EACpBC,MAAa,EACbC,eAAuB,EACvBC,QAA0B,EAC1BC,MAAyB;EAEzB,IAAIZ,WAAW,CAACQ,IAAI,CAAC,EAAE;IACrB,OAAO,IAAIJ,UAAU,CAACI,IAAI,EAAEC,MAAM,EAAEC,eAAe,EAAEE,MAAM,CAAC;EAC9D,CAAC,MAAM,IAAIX,WAAW,CAACO,IAAI,CAAC,EAAE;IAC5B,OAAO,IAAIH,UAAU,CAACG,IAAI,EAAEC,MAAM,EAAEC,eAAe,EAAEC,QAAQ,EAAEC,MAAM,CAAC;EACxE,CAAC,MAAM,IAAIV,UAAU,CAACM,IAAI,CAAC,EAAE;IAC3B,OAAO,IAAIF,SAAS,CAACE,IAAI,EAAEC,MAAM,EAAEC,eAAe,EAAEC,QAAQ,EAAEC,MAAM,CAAC;EACvE,CAAC,MAAM,IAAIb,eAAe,CAACS,IAAI,CAAC,EAAE;IAChC,OAAO,IAAIL,WAAW,CAACK,IAAI,EAAEC,MAAM,EAAEC,eAAe,EAAEE,MAAM,CAAC;EAC/D;EACA,MAAM,IAAIC,KAAK,CAACf,GAAG,CAACgB,OAAO,CAACC,WAAW,CAACP,IAAI,CAAC,CAAC;AAChD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}