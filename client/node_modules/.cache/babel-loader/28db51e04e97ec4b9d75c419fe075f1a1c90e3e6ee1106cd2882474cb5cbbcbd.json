{"ast":null,"code":"import { duplicate, hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for quantile transform nodes\n */\nexport class QuantileTransformNode extends DataFlowNode {\n  clone() {\n    return new QuantileTransformNode(null, duplicate(this.transform));\n  }\n  constructor(parent, transform) {\n    super(parent);\n    this.transform = transform;\n    this.transform = duplicate(transform); // duplicate to prevent side effects\n    const specifiedAs = this.transform.as ?? [undefined, undefined];\n    this.transform.as = [specifiedAs[0] ?? 'prob', specifiedAs[1] ?? 'value'];\n  }\n  dependentFields() {\n    return new Set([this.transform.quantile, ...(this.transform.groupby ?? [])]);\n  }\n  producedFields() {\n    return new Set(this.transform.as);\n  }\n  hash() {\n    return `QuantileTransform ${hash(this.transform)}`;\n  }\n  assemble() {\n    const {\n      quantile,\n      ...rest\n    } = this.transform;\n    const result = {\n      type: 'quantile',\n      field: quantile,\n      ...rest\n    };\n    return result;\n  }\n}","map":{"version":3,"names":["duplicate","hash","DataFlowNode","QuantileTransformNode","clone","transform","constructor","parent","specifiedAs","as","undefined","dependentFields","Set","quantile","groupby","producedFields","assemble","rest","result","type","field"],"sources":["C:\\Users\\sutul\\node_modules\\vega-lite\\src\\compile\\data\\quantile.ts"],"sourcesContent":["import {QuantileTransform as VgQuantileTransform} from 'vega';\nimport {QuantileTransform} from '../../transform';\nimport {duplicate, hash} from '../../util';\nimport {DataFlowNode} from './dataflow';\n\n/**\n * A class for quantile transform nodes\n */\nexport class QuantileTransformNode extends DataFlowNode {\n  public clone() {\n    return new QuantileTransformNode(null, duplicate(this.transform));\n  }\n\n  constructor(\n    parent: DataFlowNode,\n    private transform: QuantileTransform\n  ) {\n    super(parent);\n    this.transform = duplicate(transform); // duplicate to prevent side effects\n    const specifiedAs = this.transform.as ?? [undefined, undefined];\n    this.transform.as = [specifiedAs[0] ?? 'prob', specifiedAs[1] ?? 'value'];\n  }\n\n  public dependentFields() {\n    return new Set([this.transform.quantile, ...(this.transform.groupby ?? [])]);\n  }\n\n  public producedFields() {\n    return new Set(this.transform.as);\n  }\n\n  public hash() {\n    return `QuantileTransform ${hash(this.transform)}`;\n  }\n\n  public assemble(): VgQuantileTransform {\n    const {quantile, ...rest} = this.transform;\n    const result: VgQuantileTransform = {\n      type: 'quantile',\n      field: quantile,\n      ...rest\n    };\n    return result;\n  }\n}\n"],"mappings":"AAEA,SAAQA,SAAS,EAAEC,IAAI,QAAO,YAAY;AAC1C,SAAQC,YAAY,QAAO,YAAY;AAEvC;;;AAGA,OAAM,MAAOC,qBAAsB,SAAQD,YAAY;EAC9CE,KAAKA,CAAA;IACV,OAAO,IAAID,qBAAqB,CAAC,IAAI,EAAEH,SAAS,CAAC,IAAI,CAACK,SAAS,CAAC,CAAC;EACnE;EAEAC,YACEC,MAAoB,EACZF,SAA4B;IAEpC,KAAK,CAACE,MAAM,CAAC;IAFL,KAAAF,SAAS,GAATA,SAAS;IAGjB,IAAI,CAACA,SAAS,GAAGL,SAAS,CAACK,SAAS,CAAC,CAAC,CAAC;IACvC,MAAMG,WAAW,GAAG,IAAI,CAACH,SAAS,CAACI,EAAE,IAAI,CAACC,SAAS,EAAEA,SAAS,CAAC;IAC/D,IAAI,CAACL,SAAS,CAACI,EAAE,GAAG,CAACD,WAAW,CAAC,CAAC,CAAC,IAAI,MAAM,EAAEA,WAAW,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC;EAC3E;EAEOG,eAAeA,CAAA;IACpB,OAAO,IAAIC,GAAG,CAAC,CAAC,IAAI,CAACP,SAAS,CAACQ,QAAQ,EAAE,IAAI,IAAI,CAACR,SAAS,CAACS,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;EAC9E;EAEOC,cAAcA,CAAA;IACnB,OAAO,IAAIH,GAAG,CAAC,IAAI,CAACP,SAAS,CAACI,EAAE,CAAC;EACnC;EAEOR,IAAIA,CAAA;IACT,OAAO,qBAAqBA,IAAI,CAAC,IAAI,CAACI,SAAS,CAAC,EAAE;EACpD;EAEOW,QAAQA,CAAA;IACb,MAAM;MAACH,QAAQ;MAAE,GAAGI;IAAI,CAAC,GAAG,IAAI,CAACZ,SAAS;IAC1C,MAAMa,MAAM,GAAwB;MAClCC,IAAI,EAAE,UAAU;MAChBC,KAAK,EAAEP,QAAQ;MACf,GAAGI;KACJ;IACD,OAAOC,MAAM;EACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}