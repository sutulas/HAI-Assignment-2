{"ast":null,"code":"import { duplicate, hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for flatten transform nodes\n */\nexport class ExtentTransformNode extends DataFlowNode {\n  clone() {\n    return new ExtentTransformNode(null, duplicate(this.transform));\n  }\n  constructor(parent, transform) {\n    super(parent);\n    this.transform = transform;\n    this.transform = duplicate(transform);\n  }\n  dependentFields() {\n    return new Set([this.transform.extent]);\n  }\n  producedFields() {\n    return new Set([]);\n  }\n  hash() {\n    return `ExtentTransform ${hash(this.transform)}`;\n  }\n  assemble() {\n    const {\n      extent,\n      param\n    } = this.transform;\n    const result = {\n      type: 'extent',\n      field: extent,\n      signal: param\n    };\n    return result;\n  }\n}","map":{"version":3,"names":["duplicate","hash","DataFlowNode","ExtentTransformNode","clone","transform","constructor","parent","dependentFields","Set","extent","producedFields","assemble","param","result","type","field","signal"],"sources":["C:\\Users\\sutul\\node_modules\\vega-lite\\src\\compile\\data\\extent.ts"],"sourcesContent":["import {ExtentTransform as VgExtentTransform} from 'vega';\nimport {ExtentTransform} from '../../transform';\nimport {duplicate, hash} from '../../util';\nimport {DataFlowNode} from './dataflow';\n\n/**\n * A class for flatten transform nodes\n */\nexport class ExtentTransformNode extends DataFlowNode {\n  public clone() {\n    return new ExtentTransformNode(null, duplicate(this.transform));\n  }\n\n  constructor(\n    parent: DataFlowNode,\n    private transform: ExtentTransform\n  ) {\n    super(parent);\n    this.transform = duplicate(transform);\n  }\n\n  public dependentFields() {\n    return new Set([this.transform.extent]);\n  }\n\n  public producedFields() {\n    return new Set([]);\n  }\n\n  public hash() {\n    return `ExtentTransform ${hash(this.transform)}`;\n  }\n\n  public assemble(): VgExtentTransform {\n    const {extent, param} = this.transform;\n    const result: VgExtentTransform = {\n      type: 'extent',\n      field: extent,\n      signal: param\n    };\n    return result;\n  }\n}\n"],"mappings":"AAEA,SAAQA,SAAS,EAAEC,IAAI,QAAO,YAAY;AAC1C,SAAQC,YAAY,QAAO,YAAY;AAEvC;;;AAGA,OAAM,MAAOC,mBAAoB,SAAQD,YAAY;EAC5CE,KAAKA,CAAA;IACV,OAAO,IAAID,mBAAmB,CAAC,IAAI,EAAEH,SAAS,CAAC,IAAI,CAACK,SAAS,CAAC,CAAC;EACjE;EAEAC,YACEC,MAAoB,EACZF,SAA0B;IAElC,KAAK,CAACE,MAAM,CAAC;IAFL,KAAAF,SAAS,GAATA,SAAS;IAGjB,IAAI,CAACA,SAAS,GAAGL,SAAS,CAACK,SAAS,CAAC;EACvC;EAEOG,eAAeA,CAAA;IACpB,OAAO,IAAIC,GAAG,CAAC,CAAC,IAAI,CAACJ,SAAS,CAACK,MAAM,CAAC,CAAC;EACzC;EAEOC,cAAcA,CAAA;IACnB,OAAO,IAAIF,GAAG,CAAC,EAAE,CAAC;EACpB;EAEOR,IAAIA,CAAA;IACT,OAAO,mBAAmBA,IAAI,CAAC,IAAI,CAACI,SAAS,CAAC,EAAE;EAClD;EAEOO,QAAQA,CAAA;IACb,MAAM;MAACF,MAAM;MAAEG;IAAK,CAAC,GAAG,IAAI,CAACR,SAAS;IACtC,MAAMS,MAAM,GAAsB;MAChCC,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAEN,MAAM;MACbO,MAAM,EAAEJ;KACT;IACD,OAAOC,MAAM;EACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}