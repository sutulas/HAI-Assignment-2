{"ast":null,"code":"import { isValueDef } from '../../../channeldef';\nimport { isPathMark } from '../../../mark';\nimport { signalOrValueRef } from '../../common';\nimport { wrapCondition } from './conditional';\nexport function zindex(model) {\n  const {\n    encoding,\n    mark\n  } = model;\n  const order = encoding.order;\n  if (!isPathMark(mark) && isValueDef(order)) {\n    return wrapCondition({\n      model,\n      channelDef: order,\n      vgChannel: 'zindex',\n      mainRefFn: cd => signalOrValueRef(cd.value),\n      invalidValueRef: undefined // zindex encoding doesn't have continuous scales and thus can't have invalid values\n    });\n  }\n  return {};\n}","map":{"version":3,"names":["isValueDef","isPathMark","signalOrValueRef","wrapCondition","zindex","model","encoding","mark","order","channelDef","vgChannel","mainRefFn","cd","value","invalidValueRef","undefined"],"sources":["C:\\Users\\sutul\\node_modules\\vega-lite\\src\\compile\\mark\\encode\\zindex.ts"],"sourcesContent":["import {isValueDef} from '../../../channeldef';\nimport {isPathMark} from '../../../mark';\nimport {signalOrValueRef} from '../../common';\nimport {UnitModel} from '../../unit';\nimport {wrapCondition} from './conditional';\n\nexport function zindex(model: UnitModel) {\n  const {encoding, mark} = model;\n  const order = encoding.order;\n\n  if (!isPathMark(mark) && isValueDef(order)) {\n    return wrapCondition({\n      model,\n      channelDef: order,\n      vgChannel: 'zindex',\n      mainRefFn: cd => signalOrValueRef(cd.value),\n      invalidValueRef: undefined // zindex encoding doesn't have continuous scales and thus can't have invalid values\n    });\n  }\n  return {};\n}\n"],"mappings":"AAAA,SAAQA,UAAU,QAAO,qBAAqB;AAC9C,SAAQC,UAAU,QAAO,eAAe;AACxC,SAAQC,gBAAgB,QAAO,cAAc;AAE7C,SAAQC,aAAa,QAAO,eAAe;AAE3C,OAAM,SAAUC,MAAMA,CAACC,KAAgB;EACrC,MAAM;IAACC,QAAQ;IAAEC;EAAI,CAAC,GAAGF,KAAK;EAC9B,MAAMG,KAAK,GAAGF,QAAQ,CAACE,KAAK;EAE5B,IAAI,CAACP,UAAU,CAACM,IAAI,CAAC,IAAIP,UAAU,CAACQ,KAAK,CAAC,EAAE;IAC1C,OAAOL,aAAa,CAAC;MACnBE,KAAK;MACLI,UAAU,EAAED,KAAK;MACjBE,SAAS,EAAE,QAAQ;MACnBC,SAAS,EAAEC,EAAE,IAAIV,gBAAgB,CAACU,EAAE,CAACC,KAAK,CAAC;MAC3CC,eAAe,EAAEC,SAAS,CAAC;KAC5B,CAAC;EACJ;EACA,OAAO,EAAE;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}