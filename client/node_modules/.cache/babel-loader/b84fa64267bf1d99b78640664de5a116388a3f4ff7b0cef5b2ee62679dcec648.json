{"ast":null,"code":"import { getMarkPropOrConfig, signalOrValueRef } from '../common';\nimport * as encode from './encode';\nexport const tick = {\n  vgMark: 'rect',\n  encodeEntry: model => {\n    const {\n      config,\n      markDef\n    } = model;\n    const orient = markDef.orient;\n    const vgSizeAxisChannel = orient === 'horizontal' ? 'x' : 'y';\n    const vgThicknessAxisChannel = orient === 'horizontal' ? 'y' : 'x';\n    const vgThicknessChannel = orient === 'horizontal' ? 'height' : 'width';\n    return {\n      ...encode.baseEncodeEntry(model, {\n        align: 'ignore',\n        baseline: 'ignore',\n        color: 'include',\n        orient: 'ignore',\n        size: 'ignore',\n        theta: 'ignore'\n      }),\n      ...encode.rectPosition(model, vgSizeAxisChannel),\n      ...encode.pointPosition(vgThicknessAxisChannel, model, {\n        defaultPos: 'mid',\n        vgChannel: vgThicknessAxisChannel === 'y' ? 'yc' : 'xc'\n      }),\n      [vgThicknessChannel]: signalOrValueRef(getMarkPropOrConfig('thickness', markDef, config))\n    };\n  }\n};","map":{"version":3,"names":["getMarkPropOrConfig","signalOrValueRef","encode","tick","vgMark","encodeEntry","model","config","markDef","orient","vgSizeAxisChannel","vgThicknessAxisChannel","vgThicknessChannel","baseEncodeEntry","align","baseline","color","size","theta","rectPosition","pointPosition","defaultPos","vgChannel"],"sources":["C:\\Users\\sutul\\node_modules\\vega-lite\\src\\compile\\mark\\tick.ts"],"sourcesContent":["import {getMarkPropOrConfig, signalOrValueRef} from '../common';\nimport {UnitModel} from '../unit';\nimport {MarkCompiler} from './base';\nimport * as encode from './encode';\n\nexport const tick: MarkCompiler = {\n  vgMark: 'rect',\n\n  encodeEntry: (model: UnitModel) => {\n    const {config, markDef} = model;\n    const orient = markDef.orient;\n\n    const vgSizeAxisChannel = orient === 'horizontal' ? 'x' : 'y';\n    const vgThicknessAxisChannel = orient === 'horizontal' ? 'y' : 'x';\n    const vgThicknessChannel = orient === 'horizontal' ? 'height' : 'width';\n\n    return {\n      ...encode.baseEncodeEntry(model, {\n        align: 'ignore',\n        baseline: 'ignore',\n        color: 'include',\n        orient: 'ignore',\n        size: 'ignore',\n        theta: 'ignore'\n      }),\n\n      ...encode.rectPosition(model, vgSizeAxisChannel),\n      ...encode.pointPosition(vgThicknessAxisChannel, model, {\n        defaultPos: 'mid',\n        vgChannel: vgThicknessAxisChannel === 'y' ? 'yc' : 'xc'\n      }),\n      [vgThicknessChannel]: signalOrValueRef(getMarkPropOrConfig('thickness', markDef, config))\n    };\n  }\n};\n"],"mappings":"AAAA,SAAQA,mBAAmB,EAAEC,gBAAgB,QAAO,WAAW;AAG/D,OAAO,KAAKC,MAAM,MAAM,UAAU;AAElC,OAAO,MAAMC,IAAI,GAAiB;EAChCC,MAAM,EAAE,MAAM;EAEdC,WAAW,EAAGC,KAAgB,IAAI;IAChC,MAAM;MAACC,MAAM;MAAEC;IAAO,CAAC,GAAGF,KAAK;IAC/B,MAAMG,MAAM,GAAGD,OAAO,CAACC,MAAM;IAE7B,MAAMC,iBAAiB,GAAGD,MAAM,KAAK,YAAY,GAAG,GAAG,GAAG,GAAG;IAC7D,MAAME,sBAAsB,GAAGF,MAAM,KAAK,YAAY,GAAG,GAAG,GAAG,GAAG;IAClE,MAAMG,kBAAkB,GAAGH,MAAM,KAAK,YAAY,GAAG,QAAQ,GAAG,OAAO;IAEvE,OAAO;MACL,GAAGP,MAAM,CAACW,eAAe,CAACP,KAAK,EAAE;QAC/BQ,KAAK,EAAE,QAAQ;QACfC,QAAQ,EAAE,QAAQ;QAClBC,KAAK,EAAE,SAAS;QAChBP,MAAM,EAAE,QAAQ;QAChBQ,IAAI,EAAE,QAAQ;QACdC,KAAK,EAAE;OACR,CAAC;MAEF,GAAGhB,MAAM,CAACiB,YAAY,CAACb,KAAK,EAAEI,iBAAiB,CAAC;MAChD,GAAGR,MAAM,CAACkB,aAAa,CAACT,sBAAsB,EAAEL,KAAK,EAAE;QACrDe,UAAU,EAAE,KAAK;QACjBC,SAAS,EAAEX,sBAAsB,KAAK,GAAG,GAAG,IAAI,GAAG;OACpD,CAAC;MACF,CAACC,kBAAkB,GAAGX,gBAAgB,CAACD,mBAAmB,CAAC,WAAW,EAAEQ,OAAO,EAAED,MAAM,CAAC;KACzF;EACH;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}