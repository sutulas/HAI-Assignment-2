{"ast":null,"code":"import { Split } from '../split';\nexport class ProjectionComponent extends Split {\n  constructor(name, specifiedProjection, size, data) {\n    super({\n      ...specifiedProjection\n    },\n    // all explicit properties of projection\n    {\n      name\n    } // name as initial implicit property\n    );\n    this.specifiedProjection = specifiedProjection;\n    this.size = size;\n    this.data = data;\n    this.merged = false;\n  }\n  /**\n   * Whether the projection parameters should fit provided data.\n   */\n  get isFit() {\n    return !!this.data;\n  }\n}","map":{"version":3,"names":["Split","ProjectionComponent","constructor","name","specifiedProjection","size","data","merged","isFit"],"sources":["C:\\Users\\sutul\\node_modules\\vega-lite\\src\\compile\\projection\\component.ts"],"sourcesContent":["import {Projection as VgProjection, SignalRef} from 'vega';\nimport {Projection} from '../../projection';\nimport {Split} from '../split';\n\nexport class ProjectionComponent extends Split<VgProjection> {\n  public merged = false;\n\n  constructor(\n    name: string,\n    public specifiedProjection: Projection<SignalRef>,\n    public size: SignalRef[],\n    public data: (string | SignalRef)[]\n  ) {\n    super(\n      {...specifiedProjection}, // all explicit properties of projection\n      {name} // name as initial implicit property\n    );\n  }\n\n  /**\n   * Whether the projection parameters should fit provided data.\n   */\n  public get isFit() {\n    return !!this.data;\n  }\n}\n"],"mappings":"AAEA,SAAQA,KAAK,QAAO,UAAU;AAE9B,OAAM,MAAOC,mBAAoB,SAAQD,KAAmB;EAG1DE,YACEC,IAAY,EACLC,mBAA0C,EAC1CC,IAAiB,EACjBC,IAA4B;IAEnC,KAAK,CACH;MAAC,GAAGF;IAAmB,CAAC;IAAE;IAC1B;MAACD;IAAI,CAAC,CAAC;KACR;IAPM,KAAAC,mBAAmB,GAAnBA,mBAAmB;IACnB,KAAAC,IAAI,GAAJA,IAAI;IACJ,KAAAC,IAAI,GAAJA,IAAI;IANN,KAAAC,MAAM,GAAG,KAAK;EAYrB;EAEA;;;EAGA,IAAWC,KAAKA,CAAA;IACd,OAAO,CAAC,CAAC,IAAI,CAACF,IAAI;EACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}