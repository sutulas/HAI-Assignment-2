{"ast":null,"code":"import * as encode from './encode';\nfunction encodeEntry(model, fixedShape) {\n  const {\n    config\n  } = model;\n  return {\n    ...encode.baseEncodeEntry(model, {\n      align: 'ignore',\n      baseline: 'ignore',\n      color: 'include',\n      size: 'include',\n      orient: 'ignore',\n      theta: 'ignore'\n    }),\n    ...encode.pointPosition('x', model, {\n      defaultPos: 'mid'\n    }),\n    ...encode.pointPosition('y', model, {\n      defaultPos: 'mid'\n    }),\n    ...encode.nonPosition('size', model),\n    ...encode.nonPosition('angle', model),\n    ...shapeMixins(model, config, fixedShape)\n  };\n}\nexport function shapeMixins(model, config, fixedShape) {\n  if (fixedShape) {\n    return {\n      shape: {\n        value: fixedShape\n      }\n    };\n  }\n  return encode.nonPosition('shape', model);\n}\nexport const point = {\n  vgMark: 'symbol',\n  encodeEntry: model => {\n    return encodeEntry(model);\n  }\n};\nexport const circle = {\n  vgMark: 'symbol',\n  encodeEntry: model => {\n    return encodeEntry(model, 'circle');\n  }\n};\nexport const square = {\n  vgMark: 'symbol',\n  encodeEntry: model => {\n    return encodeEntry(model, 'square');\n  }\n};","map":{"version":3,"names":["encode","encodeEntry","model","fixedShape","config","baseEncodeEntry","align","baseline","color","size","orient","theta","pointPosition","defaultPos","nonPosition","shapeMixins","shape","value","point","vgMark","circle","square"],"sources":["C:\\Users\\sutul\\node_modules\\vega-lite\\src\\compile\\mark\\point.ts"],"sourcesContent":["import {Config} from '../../config';\nimport {VgEncodeEntry} from '../../vega.schema';\nimport {UnitModel} from '../unit';\nimport {MarkCompiler} from './base';\nimport * as encode from './encode';\n\nfunction encodeEntry(model: UnitModel, fixedShape?: 'circle' | 'square') {\n  const {config} = model;\n\n  return {\n    ...encode.baseEncodeEntry(model, {\n      align: 'ignore',\n      baseline: 'ignore',\n      color: 'include',\n      size: 'include',\n      orient: 'ignore',\n      theta: 'ignore'\n    }),\n    ...encode.pointPosition('x', model, {defaultPos: 'mid'}),\n    ...encode.pointPosition('y', model, {defaultPos: 'mid'}),\n    ...encode.nonPosition('size', model),\n    ...encode.nonPosition('angle', model),\n    ...shapeMixins(model, config, fixedShape)\n  };\n}\n\nexport function shapeMixins(model: UnitModel, config: Config, fixedShape?: 'circle' | 'square'): VgEncodeEntry {\n  if (fixedShape) {\n    return {shape: {value: fixedShape}};\n  }\n  return encode.nonPosition('shape', model);\n}\n\nexport const point: MarkCompiler = {\n  vgMark: 'symbol',\n  encodeEntry: (model: UnitModel) => {\n    return encodeEntry(model);\n  }\n};\n\nexport const circle: MarkCompiler = {\n  vgMark: 'symbol',\n  encodeEntry: (model: UnitModel) => {\n    return encodeEntry(model, 'circle');\n  }\n};\n\nexport const square: MarkCompiler = {\n  vgMark: 'symbol',\n  encodeEntry: (model: UnitModel) => {\n    return encodeEntry(model, 'square');\n  }\n};\n"],"mappings":"AAIA,OAAO,KAAKA,MAAM,MAAM,UAAU;AAElC,SAASC,WAAWA,CAACC,KAAgB,EAAEC,UAAgC;EACrE,MAAM;IAACC;EAAM,CAAC,GAAGF,KAAK;EAEtB,OAAO;IACL,GAAGF,MAAM,CAACK,eAAe,CAACH,KAAK,EAAE;MAC/BI,KAAK,EAAE,QAAQ;MACfC,QAAQ,EAAE,QAAQ;MAClBC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,QAAQ;MAChBC,KAAK,EAAE;KACR,CAAC;IACF,GAAGX,MAAM,CAACY,aAAa,CAAC,GAAG,EAAEV,KAAK,EAAE;MAACW,UAAU,EAAE;IAAK,CAAC,CAAC;IACxD,GAAGb,MAAM,CAACY,aAAa,CAAC,GAAG,EAAEV,KAAK,EAAE;MAACW,UAAU,EAAE;IAAK,CAAC,CAAC;IACxD,GAAGb,MAAM,CAACc,WAAW,CAAC,MAAM,EAAEZ,KAAK,CAAC;IACpC,GAAGF,MAAM,CAACc,WAAW,CAAC,OAAO,EAAEZ,KAAK,CAAC;IACrC,GAAGa,WAAW,CAACb,KAAK,EAAEE,MAAM,EAAED,UAAU;GACzC;AACH;AAEA,OAAM,SAAUY,WAAWA,CAACb,KAAgB,EAAEE,MAAc,EAAED,UAAgC;EAC5F,IAAIA,UAAU,EAAE;IACd,OAAO;MAACa,KAAK,EAAE;QAACC,KAAK,EAAEd;MAAU;IAAC,CAAC;EACrC;EACA,OAAOH,MAAM,CAACc,WAAW,CAAC,OAAO,EAAEZ,KAAK,CAAC;AAC3C;AAEA,OAAO,MAAMgB,KAAK,GAAiB;EACjCC,MAAM,EAAE,QAAQ;EAChBlB,WAAW,EAAGC,KAAgB,IAAI;IAChC,OAAOD,WAAW,CAACC,KAAK,CAAC;EAC3B;CACD;AAED,OAAO,MAAMkB,MAAM,GAAiB;EAClCD,MAAM,EAAE,QAAQ;EAChBlB,WAAW,EAAGC,KAAgB,IAAI;IAChC,OAAOD,WAAW,CAACC,KAAK,EAAE,QAAQ,CAAC;EACrC;CACD;AAED,OAAO,MAAMmB,MAAM,GAAiB;EAClCF,MAAM,EAAE,QAAQ;EAChBlB,WAAW,EAAGC,KAAgB,IAAI;IAChC,OAAOD,WAAW,CAACC,KAAK,EAAE,QAAQ,CAAC;EACrC;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}