{"ast":null,"code":"import { parseSelector } from 'vega-event-selector';\nimport { isString } from 'vega-util';\nimport { TUPLE } from '.';\nimport { varName } from '../../util';\nimport inputBindings from './inputs';\nimport toggle, { TOGGLE } from './toggle';\nconst clear = {\n  defined: selCmpt => {\n    return selCmpt.clear !== undefined && selCmpt.clear !== false;\n  },\n  parse: (model, selCmpt) => {\n    if (selCmpt.clear) {\n      selCmpt.clear = isString(selCmpt.clear) ? parseSelector(selCmpt.clear, 'view') : selCmpt.clear;\n    }\n  },\n  topLevelSignals: (model, selCmpt, signals) => {\n    if (inputBindings.defined(selCmpt)) {\n      for (const proj of selCmpt.project.items) {\n        const idx = signals.findIndex(n => n.name === varName(`${selCmpt.name}_${proj.field}`));\n        if (idx !== -1) {\n          signals[idx].on.push({\n            events: selCmpt.clear,\n            update: 'null'\n          });\n        }\n      }\n    }\n    return signals;\n  },\n  signals: (model, selCmpt, signals) => {\n    function addClear(idx, update) {\n      if (idx !== -1 && signals[idx].on) {\n        signals[idx].on.push({\n          events: selCmpt.clear,\n          update\n        });\n      }\n    }\n    // Be as minimalist as possible when adding clear triggers to minimize dataflow execution.\n    if (selCmpt.type === 'interval') {\n      for (const proj of selCmpt.project.items) {\n        const vIdx = signals.findIndex(n => n.name === proj.signals.visual);\n        addClear(vIdx, '[0, 0]');\n        if (vIdx === -1) {\n          const dIdx = signals.findIndex(n => n.name === proj.signals.data);\n          addClear(dIdx, 'null');\n        }\n      }\n    } else {\n      let tIdx = signals.findIndex(n => n.name === selCmpt.name + TUPLE);\n      addClear(tIdx, 'null');\n      if (toggle.defined(selCmpt)) {\n        tIdx = signals.findIndex(n => n.name === selCmpt.name + TOGGLE);\n        addClear(tIdx, 'false');\n      }\n    }\n    return signals;\n  }\n};\nexport default clear;","map":{"version":3,"names":["parseSelector","isString","TUPLE","varName","inputBindings","toggle","TOGGLE","clear","defined","selCmpt","undefined","parse","model","topLevelSignals","signals","proj","project","items","idx","findIndex","n","name","field","on","push","events","update","addClear","type","vIdx","visual","dIdx","data","tIdx"],"sources":["C:\\Users\\sutul\\node_modules\\vega-lite\\src\\compile\\selection\\clear.ts"],"sourcesContent":["import {Update} from 'vega';\nimport {parseSelector} from 'vega-event-selector';\nimport {isString} from 'vega-util';\nimport {TUPLE} from '.';\nimport {varName} from '../../util';\nimport inputBindings from './inputs';\nimport toggle, {TOGGLE} from './toggle';\nimport {SelectionCompiler} from '.';\n\nconst clear: SelectionCompiler = {\n  defined: selCmpt => {\n    return selCmpt.clear !== undefined && selCmpt.clear !== false;\n  },\n\n  parse: (model, selCmpt) => {\n    if (selCmpt.clear) {\n      selCmpt.clear = isString(selCmpt.clear) ? parseSelector(selCmpt.clear, 'view') : selCmpt.clear;\n    }\n  },\n\n  topLevelSignals: (model, selCmpt, signals) => {\n    if (inputBindings.defined(selCmpt)) {\n      for (const proj of selCmpt.project.items) {\n        const idx = signals.findIndex(n => n.name === varName(`${selCmpt.name}_${proj.field}`));\n        if (idx !== -1) {\n          signals[idx].on.push({events: selCmpt.clear, update: 'null'});\n        }\n      }\n    }\n\n    return signals;\n  },\n\n  signals: (model, selCmpt, signals) => {\n    function addClear(idx: number, update: Update) {\n      if (idx !== -1 && signals[idx].on) {\n        signals[idx].on.push({events: selCmpt.clear, update});\n      }\n    }\n\n    // Be as minimalist as possible when adding clear triggers to minimize dataflow execution.\n    if (selCmpt.type === 'interval') {\n      for (const proj of selCmpt.project.items) {\n        const vIdx = signals.findIndex(n => n.name === proj.signals.visual);\n        addClear(vIdx, '[0, 0]');\n\n        if (vIdx === -1) {\n          const dIdx = signals.findIndex(n => n.name === proj.signals.data);\n          addClear(dIdx, 'null');\n        }\n      }\n    } else {\n      let tIdx = signals.findIndex(n => n.name === selCmpt.name + TUPLE);\n      addClear(tIdx, 'null');\n\n      if (toggle.defined(selCmpt)) {\n        tIdx = signals.findIndex(n => n.name === selCmpt.name + TOGGLE);\n        addClear(tIdx, 'false');\n      }\n    }\n\n    return signals;\n  }\n};\n\nexport default clear;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}