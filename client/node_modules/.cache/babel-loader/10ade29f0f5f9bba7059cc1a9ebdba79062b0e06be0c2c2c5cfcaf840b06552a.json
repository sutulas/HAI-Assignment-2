{"ast":null,"code":"import { getMarkType } from '../mark';\nimport { isUnitSpec } from '../spec/unit';\nexport class CompositeMarkNormalizer {\n  constructor(name, run) {\n    this.name = name;\n    this.run = run;\n  }\n  hasMatchingType(spec) {\n    if (isUnitSpec(spec)) {\n      return getMarkType(spec.mark) === this.name;\n    }\n    return false;\n  }\n}","map":{"version":3,"names":["getMarkType","isUnitSpec","CompositeMarkNormalizer","constructor","name","run","hasMatchingType","spec","mark"],"sources":["C:\\Users\\sutul\\node_modules\\vega-lite\\src\\compositemark\\base.ts"],"sourcesContent":["import {Encoding} from '../encoding';\nimport {GenericMarkDef, getMarkType} from '../mark';\nimport {NonFacetUnitNormalizer, Normalize, NormalizerParams} from '../normalize/base';\nimport {GenericSpec} from '../spec';\nimport {GenericLayerSpec, NormalizedLayerSpec} from '../spec/layer';\nimport {GenericUnitSpec, isUnitSpec, NormalizedUnitSpec} from '../spec/unit';\nimport {FieldName} from '../channeldef';\n\n// TODO: replace string with Mark\nexport type CompositeMarkUnitSpec<M extends string> = GenericUnitSpec<any, M | GenericMarkDef<M>>;\n\nexport class CompositeMarkNormalizer<M extends string> implements NonFacetUnitNormalizer<CompositeMarkUnitSpec<M>> {\n  constructor(\n    public name: string,\n    public run: (\n      spec: CompositeMarkUnitSpec<M>,\n      params: NormalizerParams,\n      normalize: Normalize<\n        // Input of the normalize method\n        GenericUnitSpec<Encoding<FieldName>, M> | GenericLayerSpec<any>,\n        // Output of the normalize method\n        NormalizedLayerSpec | NormalizedUnitSpec\n      >\n    ) => NormalizedLayerSpec | NormalizedUnitSpec\n  ) {}\n\n  public hasMatchingType(spec: GenericSpec<any, any, any, any>): spec is CompositeMarkUnitSpec<M> {\n    if (isUnitSpec(spec)) {\n      return getMarkType(spec.mark) === this.name;\n    }\n    return false;\n  }\n}\n"],"mappings":"AACA,SAAwBA,WAAW,QAAO,SAAS;AAInD,SAAyBC,UAAU,QAA2B,cAAc;AAM5E,OAAM,MAAOC,uBAAuB;EAClCC,YACSC,IAAY,EACZC,GASsC;IAVtC,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,GAAG,GAAHA,GAAG;EAUT;EAEIC,eAAeA,CAACC,IAAqC;IAC1D,IAAIN,UAAU,CAACM,IAAI,CAAC,EAAE;MACpB,OAAOP,WAAW,CAACO,IAAI,CAACC,IAAI,CAAC,KAAK,IAAI,CAACJ,IAAI;IAC7C;IACA,OAAO,KAAK;EACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}